package facts

var pureStdlib = map[string]uint8{
	"errors.New":    Getter,
	"errors.Is":     Pure,
	"errors.Unwrao": Pure,

	"fmt.Errorf":   Getter,
	"fmt.Sprintf":  Pure,
	"fmt.Sprint":   Pure,
	"fmt.Sprintln": Pure,

	"sort.Reverse":           Pure,
	"sort.Float64sAreSorted": Pure,
	"sort.IntsAreSorted":     Pure,
	"sort.IsSorted":          Pure,
	"sort.SearchFloat64s":    Pure,
	"sort.SearchInts":        Pure,
	"sort.SearchStrings":     Pure,
	"sort.StringsAreSorted":  Pure,

	"(*strings.Builder).Cap":      Getter,
	"(*strings.Builder).Len":      Getter,
	"(*strings.Builder).String":   Getter,
	"(*strings.Reader).Len":       Getter,
	"(*strings.Reader).Size":      Getter,
	"(*strings.Replacer).Replace": Getter,
	"strings.Compare":             Pure,
	"strings.Contains":            Pure,
	"strings.ContainsAny":         Pure,
	"strings.ContainsRune":        Pure,
	"strings.Count":               Pure,
	"strings.EqualFold":           Pure,
	"strings.Fields":              SlicePure,
	"strings.HasPrefix":           Pure,
	"strings.HasSuffix":           Pure,
	"strings.Index":               Pure,
	"strings.IndexAny":            Pure,
	"strings.IndexByte":           Pure,
	"strings.IndexRune":           Pure,
	"strings.Join":                Pure,
	"strings.LastIndex":           Pure,
	"strings.LastIndexAny":        Pure,
	"strings.LastIndexByte":       Pure,
	"strings.NewReader":           Getter,
	"strings.NewReplacer":         Getter,
	"strings.Repeat":              Pure,
	"strings.Replace":             Pure,
	"strings.ReplaceAll":          Pure,
	"strings.Split":               SlicePure,
	"strings.SplitAfter":          SlicePure,
	"strings.SplitAfterN":         SlicePure,
	"strings.SplitN":              SlicePure,
	"strings.Title":               Pure,
	"strings.ToLower":             Pure,
	"strings.ToLowerSpecial":      Pure,
	"strings.ToTitle":             Pure,
	"strings.ToTitleSpecial":      Pure,
	"strings.ToUpper":             Pure,
	"strings.ToUpperSpecial":      Pure,
	"strings.ToValidUTF8":         Pure,
	"strings.Trim":                Pure,
	"strings.TrimLeft":            Pure,
	"strings.TrimPrefix":          Pure,
	"strings.TrimRight":           Pure,
	"strings.TrimSpace":           Pure,
	"strings.TrimSuffix":          Pure,

	"(*net/http.Cookie).String":         Getter,
	"(*net/http.ProtocolError).Error":   Getter,
	"(*net/http.Request).BasicAuth":     Getter,
	"(*net/http.Request).Clone":         Getter,
	"(*net/http.Request).Context":       Getter,
	"(*net/http.Request).Cookie":        Getter,
	"(*net/http.Request).Cookies":       Getter,
	"(*net/http.Request).ProtoAtLeast":  Getter,
	"(*net/http.Request).Referer":       Getter,
	"(*net/http.Request).UserAgent":     Getter,
	"(*net/http.Request).WithContext":   Getter,
	"(*net/http.Response).Cookies":      Getter,
	"(*net/http.Response).Location":     Getter,
	"(*net/http.Response).ProtoAtLeast": Getter,
	"(*net/http.ServeMux).Handler":      Getter,
	"(*net/http.Transport).Clone":       Getter,
	"(net/http.ConnState).String":       Pure,
	"(net/http.Dir).Open":               Getter,
	"(net/http.Header).Clone":           Getter,
	"(net/http.Header).Get":             Getter,
	"(net/http.Header).Values":          Getter,
	"net/http.CanonicalHeaderKey":       Pure,
	"net/http.DetectContentType":        Pure,
	"net/http.FileServer":               Getter,
	"net/http.MaxBytesReader":           Getter,
	"net/http.NewFileTransport":         Getter,
	"net/http.NewRequest":               Getter,
	"net/http.NewRequestWithContext":    Getter,
	"net/http.NewServeMux":              Getter,
	"net/http.NotFoundHandler":          Getter,
	"net/http.ParseHTTPVersion":         Pure,
	"net/http.ParseTime":                Pure,
	"net/http.ProxyFromEnvironment":     Getter,
	"net/http.ProxyURL":                 Getter,
	"net/http.RedirectHandler":          Getter,
	"net/http.StatusText":               Pure,
	"net/http.StripPrefix":              Getter,
	"net/http.TimeoutHandler":           Getter,

	"context.Background":   Pure,
	"context.TODO":         Pure,
	"context.WithValue":    Getter,
	"context.WithCancel":   Getter,
	"context.WithDeadline": Getter,
	"context.WithTimeout":  Getter,

	"html.EscapeString":   Pure,
	"html.UnescapeString": Pure,

	"sync.NewCond": Getter,

	"(*bufio.Reader).Buffered":  Getter,
	"(*bufio.Reader).Size":      Getter,
	"(*bufio.Scanner).Bytes":    Getter,
	"(*bufio.Scanner).Err":      Getter,
	"(*bufio.Scanner).Text":     Getter,
	"(*bufio.Writer).Available": Getter,
	"(*bufio.Writer).Buffered":  Getter,
	"(*bufio.Writer).Size":      Getter,
	"bufio.NewReadWriter":       Getter,
	"bufio.NewReader":           Getter,
	"bufio.NewReaderSize":       Getter,
	"bufio.NewScanner":          Getter,
	"bufio.NewWriter":           Getter,
	"bufio.NewWriterSize":       Getter,

	"(*bytes.Buffer).Bytes":  Getter,
	"(*bytes.Buffer).Cap":    Getter,
	"(*bytes.Buffer).Len":    Getter,
	"(*bytes.Buffer).String": Getter,
	"(*bytes.Reader).Len":    Getter,
	"(*bytes.Reader).Size":   Getter,
	"bytes.Compare":          SlicePure,
	"bytes.Contains":         SlicePure,
	"bytes.ContainsAny":      SlicePure,
	"bytes.ContainsRune":     SlicePure,
	"bytes.Count":            SlicePure,
	"bytes.Equal":            SlicePure,
	"bytes.EqualFold":        SlicePure,
	"bytes.Fields":           SlicePure,
	"bytes.HasPrefix":        SlicePure,
	"bytes.HasSuffix":        SlicePure,
	"bytes.Index":            SlicePure,
	"bytes.IndexAny":         SlicePure,
	"bytes.IndexByte":        SlicePure,
	"bytes.IndexRune":        SlicePure,
	"bytes.Join":             SlicePure,
	"bytes.LastIndex":        SlicePure,
	"bytes.LastIndexAny":     SlicePure,
	"bytes.LastIndexByte":    SlicePure,
	"bytes.NewBuffer":        Getter,
	"bytes.NewBufferString":  Getter,
	"bytes.NewReader":        Getter,
	"bytes.Repeat":           SlicePure,
	"bytes.Replace":          SlicePure,
	"bytes.ReplaceAll":       SlicePure,
	"bytes.Runes":            SlicePure,
	"bytes.Split":            SlicePure,
	"bytes.SplitAfter":       SlicePure,
	"bytes.SplitAfterN":      SlicePure,
	"bytes.SplitN":           SlicePure,
	"bytes.Title":            SlicePure,
	"bytes.ToLower":          SlicePure,
	"bytes.ToLowerSpecial":   SlicePure,
	"bytes.ToTitle":          SlicePure,
	"bytes.ToTitleSpecial":   SlicePure,
	"bytes.ToUpper":          SlicePure,
	"bytes.ToUpperSpecial":   SlicePure,
	"bytes.ToValidUTF8":      SlicePure,
	"bytes.Trim":             SlicePure,
	"bytes.TrimLeft":         SlicePure,
	"bytes.TrimPrefix":       SlicePure,
	"bytes.TrimRight":        SlicePure,
	"bytes.TrimSpace":        SlicePure,
	"bytes.TrimSuffix":       SlicePure,

	"(unicode.SpecialCase).ToLower": Pure,
	"(unicode.SpecialCase).ToTitle": Pure,
	"(unicode.SpecialCase).ToUpper": Pure,
	"unicode.In":                    Pure,
	"unicode.Is":                    Pure,
	"unicode.IsControl":             Pure,
	"unicode.IsDigit":               Pure,
	"unicode.IsGraphic":             Pure,
	"unicode.IsLetter":              Pure,
	"unicode.IsLower":               Pure,
	"unicode.IsMark":                Pure,
	"unicode.IsNumber":              Pure,
	"unicode.IsOneOf":               Pure,
	"unicode.IsPrint":               Pure,
	"unicode.IsPunct":               Pure,
	"unicode.IsSpace":               Pure,
	"unicode.IsSymbol":              Pure,
	"unicode.IsTitle":               Pure,
	"unicode.IsUpper":               Pure,
	"unicode.SimpleFold":            Pure,
	"unicode.To":                    Pure,
	"unicode.ToLower":               Pure,
	"unicode.ToTitle":               Pure,
	"unicode.ToUpper":               Pure,

	"unicode/utf8.DecodeLastRune":         Pure,
	"unicode/utf8.DecodeLastRuneInString": Pure,
	"unicode/utf8.DecodeRune":             Pure,
	"unicode/utf8.DecodeRuneInString":     Pure,
	"unicode/utf8.FullRune":               Pure,
	"unicode/utf8.FullRuneInString":       Pure,
	"unicode/utf8.RuneCount":              SlicePure,
	"unicode/utf8.RuneCountInString":      Pure,
	"unicode/utf8.RuneLen":                Pure,
	"unicode/utf8.RuneStart":              Pure,
	"unicode/utf8.Valid":                  SlicePure,
	"unicode/utf8.ValidRune":              Pure,
	"unicode/utf8.ValidString":            Pure,

	"unicode/utf16.Decode":      SlicePure,
	"unicode/utf16.DecodeRune":  Pure,
	"unicode/utf16.IsSurrogate": Pure,

	"(*time.Location).String":      Getter,
	"(*time.ParseError).Error":     Getter,
	"(time.Duration).Hours":        Pure,
	"(time.Duration).Microseconds": Pure,
	"(time.Duration).Milliseconds": Pure,
	"(time.Duration).Minutes":      Pure,
	"(time.Duration).Nanoseconds":  Pure,
	"(time.Duration).Round":        Pure,
	"(time.Duration).Seconds":      Pure,
	"(time.Duration).String":       Pure,
	"(time.Duration).Truncate":     Pure,
	"(time.Month).String":          Pure,
	"(time.Time).Add":              Pure,
	"(time.Time).AddDate":          Pure,
	"(time.Time).After":            Pure,
	"(time.Time).Before":           Pure,
	"(time.Time).Clock":            Pure,
	"(time.Time).Date":             Pure,
	"(time.Time).Day":              Pure,
	"(time.Time).Equal":            Pure,
	"(time.Time).Format":           Pure,
	"(time.Time).GobEncode":        SlicePure,
	"(time.Time).Hour":             Pure,
	"(time.Time).ISOWeek":          Pure,
	"(time.Time).In":               Pure,
	"(time.Time).IsZero":           Pure,
	"(time.Time).Local":            Pure,
	"(time.Time).Location":         Pure,
	"(time.Time).MarshalBinary":    SlicePure,
	"(time.Time).MarshalJSON":      SlicePure,
	"(time.Time).MarshalText":      SlicePure,
	"(time.Time).Minute":           Pure,
	"(time.Time).Month":            Pure,
	"(time.Time).Nanosecond":       Pure,
	"(time.Time).Round":            Pure,
	"(time.Time).Second":           Pure,
	"(time.Time).String":           Pure,
	"(time.Time).Sub":              Pure,
	"(time.Time).Truncate":         Pure,
	"(time.Time).UTC":              Pure,
	"(time.Time).Unix":             Pure,
	"(time.Time).UnixNano":         Pure,
	"(time.Time).Weekday":          Pure,
	"(time.Time).Year":             Pure,
	"(time.Time).YearDay":          Pure,
	"(time.Time).Zone":             Pure,
	"(time.Weekday).String":        Pure,
	"time.Date":                    Pure,
	"time.FixedZone":               Getter,
	"time.LoadLocation":            Getter,
	"time.LoadLocationFromTZData":  Getter,
	"time.NewTicker":               Getter,
	"time.NewTimer":                Getter,
	"time.Now":                     Getter,
	"time.Parse":                   Pure,
	"time.ParseDuration":           Pure,
	"time.ParseInLocation":         Pure,
	"time.Since":                   Pure,
	"time.Unix":                    Pure,
	"time.Until":                   Pure,

	"(*testing.B).Failed":                         Getter,
	"(*testing.B).Named":                          Getter,
	"(*testing.B).Skipped":                        Getter,
	"(*testing.T).Deadline":                       Getter,
	"(*testing.T).Failed":                         Getter,
	"(*testing.T).Name":                           Getter,
	"(*testing.T).Skipped":                        Getter,
	"(testing.BenchmarkResult).AllocedBytesPerOp": Pure,
	"(testing.BenchmarkResult).AllocsPerOp":       Pure,
	"(testing.BenchmarkResult).MemString":         Pure,
	"(testing.BenchmarkResult).NsPerOp":           Pure,
	"(testing.BenchmarkResult).String":            Pure,
	"testing.CoverMode":                           Getter,
	"testing.Coverage":                            Getter,
	"testing.Short":                               Getter,
	"testing.Verbose":                             Getter,

	"testing/iotest.DataErrReader":  Getter,
	"testing/iotest.HalfReader":     Getter,
	"testing/iotest.NewReadLogger":  Getter,
	"testing/iotest.NewWriteLogger": Getter,
	"testing/iotest.OneByteReader":  Getter,
	"testing/iotest.TimeoutReader":  Getter,
	"testing/iotest.TruncateWriter": Getter,

	"(*testing/quick.CheckError).Error": Getter,
	"(testing/quick.SetupError).Error":  Getter,

	"(*strconv.NumError).Error":  Getter,
	"(*strconv.NumError).Unwrap": Getter,
	"strconv.Atoi":               Pure,
	"strconv.CanBackquote":       Pure,
	"strconv.FormatBool":         Pure,
	"strconv.FormatComplex":      Pure,
	"strconv.FormatFloat":        Pure,
	"strconv.FormatInt":          Pure,
	"strconv.FormatUint":         Pure,
	"strconv.IsGraphic":          Pure,
	"strconv.IsPrint":            Pure,
	"strconv.Itoa":               Pure,
	"strconv.ParseBool":          Pure,
	"strconv.ParseComplex":       Pure,
	"strconv.ParseFloat":         Pure,
	"strconv.ParseInt":           Pure,
	"strconv.ParseUint":          Pure,
	"strconv.Quote":              Pure,
	"strconv.QuoteRune":          Pure,
	"strconv.QuoteRuneToASCII":   Pure,
	"strconv.QuoteRuneToGraphic": Pure,
	"strconv.QuoteToASCII":       Pure,
	"strconv.QuoteToGraphic":     Pure,
	"strconv.Unquote":            Pure,
	"strconv.UnquoteChar":        Pure,

	"(*log.Logger).Flags":  Getter,
	"(*log.Logger).Prefix": Getter,
	"(*log.Logger).Writer": Getter,
	"log.Flags":            Getter,
	"log.New":              Getter,
	"log.Prefix":           Getter,
	"log.Writer":           Getter,

	"(mime.WordEncoder).Encode": Pure,
	"mime.ExtensionsByType":     Pure,
	"mime.FormatMediaType":      Pure,
	"mime.ParseMediaType":       Pure,
	"mime.TypeByExtension":      Pure,

	"(*mime/multipart.FileHeader).Open":            Getter,
	"(*mime/multipart.Part).FileName":              Getter,
	"(*mime/multipart.Part).FormName":              Getter,
	"(*mime/multipart.Writer).Boundary":            Getter,
	"(*mime/multipart.Writer).FormDataContentType": Getter,
	"mime/multipart.NewReader":                     Getter,
	"mime/multipart.NewWriter":                     Getter,

	"mime/quotedprintable.NewReader": Getter,
	"mime/quotedprintable.NewWriter": Getter,

	"(*container/list.Element).Next": Getter,
	"(*container/list.Element).Prev": Getter,
	"(*container/list.List).Back":    Getter,
	"(*container/list.List).Front":   Getter,
	"(*container/list.List).Len":     Getter,
	"container/list.New":             Getter,

	"(*container/ring.Ring).Len":  Getter,
	"(*container/ring.Ring).Next": Getter,
	"(*container/ring.Ring).Prev": Getter,
	"container/ring.New":          Getter,

	"(*plugin.Plugin).Lookup": Getter,
	"plugin.Open":             Getter,

	"(*os.File).Fd":                 Getter,
	"(*os.File).Name":               Getter,
	"(*os.File).Stat":               Getter,
	"(*os.File).SyscallConn":        Getter,
	"(*os.LinkError).Error":         Getter,
	"(*os.LinkError).Unwrap":        Getter,
	"(*os.PathError).Error":         Getter,
	"(*os.PathError).Timeout":       Getter,
	"(*os.PathError).Unwrap":        Getter,
	"(*os.ProcessState).ExitCode":   Getter,
	"(*os.ProcessState).Exited":     Getter,
	"(*os.ProcessState).Pid":        Getter,
	"(*os.ProcessState).String":     Getter,
	"(*os.ProcessState).Success":    Getter,
	"(*os.ProcessState).Sys":        Getter,
	"(*os.ProcessState).SysUsage":   Getter,
	"(*os.ProcessState).SystemTime": Getter,
	"(*os.ProcessState).UserTime":   Getter,
	"(*os.SyscallError).Error":      Getter,
	"(*os.SyscallError).Timeout":    Getter,
	"(*os.SyscallError).Unwrap":     Getter,
	"(os.FileMode).IsDir":           Pure,
	"(os.FileMode).IsRegular":       Pure,
	"(os.FileMode).Perm":            Pure,
	"(os.FileMode).String":          Pure,
	"os.Environ":                    Getter,
	"os.Executable":                 Getter,
	"os.ExpandEnv":                  Getter,
	"os.FindProcess":                Getter,
	"os.Getegid":                    Getter,
	"os.Getenv":                     Getter,
	"os.Geteuid":                    Getter,
	"os.Getgid":                     Getter,
	"os.Getgroups":                  Getter,
	"os.Getpagesize":                Getter,
	"os.Getpid":                     Getter,
	"os.Getppid":                    Getter,
	"os.Getuid":                     Getter,
	"os.Getwd":                      Getter,
	"os.Hostname":                   Getter,
	"os.IsExist":                    Pure,
	"os.IsNotExist":                 Pure,
	"os.IsPathSeparator":            Pure,
	"os.IsPermission":               Pure,
	"os.IsTimeout":                  Pure,
	"os.LookupEnv":                  Getter,
	"os.Lstat":                      Getter,
	"os.NewFile":                    Getter,
	"os.NewSyscallError":            Getter,
	"os.Open":                       Getter,
	"os.OpenFile":                   Getter,
	"os.Pipe":                       Getter,
	"os.Readlink":                   Getter,
	"os.SameFile":                   Getter,
	"os.Stat":                       Getter,
	"os.TempDir":                    Getter,
	"os.UserCacheDir":               Getter,
	"os.UserConfigDir":              Getter,
	"os.UserHomeDir":                Getter,

	"(*os/exec.Cmd).String":      Getter,
	"(*os/exec.Error).Error":     Getter,
	"(*os/exec.Error).Unwrap":    Getter,
	"(*os/exec.ExitError).Error": Getter,
	"os/exec.Command":            Getter,
	"os/exec.CommandContext":     Getter,
	"os/exec.LookPath":           Getter,

	"os/signal.Ignored": Getter,

	"(os/user.UnknownGroupError).Error":   Pure,
	"(os/user.UnknownGroupIdError).Error": Pure,
	"(os/user.UnknownUserError).Error":    Pure,
	"(os/user.UnknownUserIdError).Error":  Pure,
	"os/user.Current":                     Getter,
	"os/user.GroupIds":                    Getter,
	"os/user.Lookup":                      Getter,
	"os/user.LookupGroup":                 Getter,
	"os/user.LookupGroupId":               Getter,
	"os/user.LookupId":                    Getter,

	"path.Base":  Pure,
	"path.Clean": Pure,
	"path.Dir":   Pure,
	"path.Ext":   Pure,
	"path.IsAbs": Pure,
	"path.Join":  Pure,
	"path.Match": Pure,
	"path.Split": Pure,

	"path/filepath.Abs":          Getter,
	"path/filepath.Base":         Pure,
	"path/filepath.Clean":        Pure,
	"path/filepath.Dir":          Pure,
	"path/filepath.EvalSymlinks": Getter,
	"path/filepath.Ext":          Pure,
	"path/filepath.FromSlash":    Pure,
	"path/filepath.Glob":         Getter,
	"path/filepath.HasPrefix":    Pure,
	"path/filepath.IsAbs":        Pure,
	"path/filepath.Join":         Pure,
	"path/filepath.Match":        Pure,
	"path/filepath.Rel":          Pure,
	"path/filepath.Split":        Pure,
	"path/filepath.SplitList":    SlicePure,
	"path/filepath.ToSlash":      Pure,
	"path/filepath.VolumeName":   Pure,

	"(*archive/tar.Header).FileInfo": Getter,
	"(archive/tar.Format).String":    Pure,
	"archive/tar.FileInfoHeader":     Getter,
	"archive/tar.NewReader":          Getter,
	"archive/tar.NewWriter":          Getter,

	"(*archive/zip.File).DataOffset":     Getter,
	"(*archive/zip.FileHeader).FileInfo": Getter,
	"(*archive/zip.FileHeader).ModTime":  Getter,
	"(*archive/zip.FileHeader).Mode":     Getter,
	"archive/zip.FileInfoHeader":         Getter,
	"archive/zip.NewReader":              Getter,
	"archive/zip.NewWriter":              Getter,
	"archive/zip.OpenReader":             Getter,

	"(encoding/ascii85.CorruptInputError).Error": Pure,
	"encoding/ascii85.MaxEncodedLen":             Pure,
	"encoding/ascii85.NewDecoder":                Getter,
	"encoding/ascii85.NewEncoder":                Getter,

	"(encoding/asn1.BitString).At":            Pure,
	"(encoding/asn1.BitString).RightAlign":    Getter,
	"(encoding/asn1.ObjectIdentifier).Equal":  Pure,
	"(encoding/asn1.ObjectIdentifier).String": Pure,
	"(encoding/asn1.StructuralError).Error":   Pure,
	"(encoding/asn1.SyntaxError).Error":       Pure,
	"encoding/asn1.Marshal":                   SlicePure,
	"encoding/asn1.MarshalWithParams":         SlicePure,

	"(*encoding/base32.Encoding).DecodedLen":    Getter,
	"(*encoding/base32.Encoding).EncodedLen":    Getter,
	"(encoding/base32.Encoding).WithPadding":    Getter,
	"(encoding/base32.CorruptInputError).Error": Pure,
	"encoding/base32.NewDecoder":                Getter,
	"encoding/base32.NewEncoder":                Getter,
	"encoding/base32.NewEncoding":               Getter,

	"(*encoding/base64.Encoding).DecodedLen":    Getter,
	"(*encoding/base64.Encoding).EncodedLen":    Getter,
	"(encoding/base64.CorruptInputError).Error": Pure,
	"(encoding/base64.Encoding).Strict":         Getter,
	"(encoding/base64.Encoding).WithPadding":    Getter,
	"encoding/base64.NewDecoder":                Getter,
	"encoding/base64.NewEncoder":                Getter,
	"encoding/base64.NewEncoding":               Getter,

	"encoding/binary.Size":    Pure,
	"encoding/binary.Uvarint": Pure,
	"encoding/binary.Varint":  Pure,

	"(*regexp.Regexp).Copy":                       Getter,
	"(*regexp.Regexp).Find":                       Getter,
	"(*regexp.Regexp).FindAll":                    Getter,
	"(*regexp.Regexp).FindAllIndex":               Getter,
	"(*regexp.Regexp).FindAllString":              Getter,
	"(*regexp.Regexp).FindAllStringIndex":         Getter,
	"(*regexp.Regexp).FindAllStringSubmatch":      Getter,
	"(*regexp.Regexp).FindAllStringSubmatchIndex": Getter,
	"(*regexp.Regexp).FindAllSubmatch":            Getter,
	"(*regexp.Regexp).FindAllSubmatchIndex":       Getter,
	"(*regexp.Regexp).FindIndex":                  Getter,
	"(*regexp.Regexp).FindString":                 Getter,
	"(*regexp.Regexp).FindStringIndex":            Getter,
	"(*regexp.Regexp).FindStringSubmatch":         Getter,
	"(*regexp.Regexp).FindStringSubmatchIndex":    Getter,
	"(*regexp.Regexp).FindSubmatch":               Getter,
	"(*regexp.Regexp).FindSubmatchIndex":          Getter,
	"(*regexp.Regexp).LiteralPrefix":              Getter,
	"(*regexp.Regexp).Match":                      Getter,
	"(*regexp.Regexp).MatchString":                Getter,
	"(*regexp.Regexp).NumSubexp":                  Getter,
	"(*regexp.Regexp).ReplaceAll":                 Getter,
	"(*regexp.Regexp).ReplaceAllLiteral":          Getter,
	"(*regexp.Regexp).ReplaceAllLiteralString":    Getter,
	"(*regexp.Regexp).ReplaceAllString":           Getter,
	"(*regexp.Regexp).Split":                      Getter,
	"(*regexp.Regexp).String":                     Getter,
	"(*regexp.Regexp).SubexpIndex":                Getter,
	"(*regexp.Regexp).SubexpNames":                Getter,
	"regexp.Compile":                              Getter,
	"regexp.CompilePOSIX":                         Getter,
	"regexp.Match":                                Pure,
	"regexp.MatchString":                          Pure,
	"regexp.QuoteMeta":                            Pure,

	"(*regexp/syntax.Error).Error":          Getter,
	"(*regexp/syntax.Inst).MatchEmptyWidth": Getter,
	"(*regexp/syntax.Inst).MatchRune":       Getter,
	"(*regexp/syntax.Inst).MatchRunePos":    Getter,
	"(*regexp/syntax.Inst).String":          Getter,
	"(*regexp/syntax.Prog).Prefix":          Getter,
	"(*regexp/syntax.Prog).StartCond":       Getter,
	"(*regexp/syntax.Prog).String":          Getter,
	"(*regexp/syntax.Regexp).CapNames":      Getter,
	"(*regexp/syntax.Regexp).Equal":         Getter,
	"(*regexp/syntax.Regexp).MaxCap":        Getter,
	"(*regexp/syntax.Regexp).Simplify":      Getter,
	"(*regexp/syntax.Regexp).String":        Getter,
	"(regexp/syntax.ErrorCode).String":      Pure,
	"(regexp/syntax.InstOp).String":         Pure,
	"(regexp/syntax.Op).String":             Pure,
	"regexp/syntax.Compile":                 Getter,
	"regexp/syntax.EmptyOpContext":          Pure,
	"regexp/syntax.IsWordChar":              Pure,
	"regexp/syntax.Parse":                   Getter,

	"(*text/scanner.Position).IsValid":  Getter,
	"(*text/scanner.Scanner).Pos":       Getter,
	"(*text/scanner.Scanner).TokenText": Getter,
	"(text/scanner.Position).String":    Pure,
	"text/scanner.TokenString":          Pure,

	"text/tabwriter.NewWriter": Getter,

	"(*text/template.Template).Clone":            Getter,
	"(*text/template.Template).DefinedTemplates": Getter,
	"(*text/template.Template).Lookup":           Getter,
	"(*text/template.Template).Name":             Getter,
	"(*text/template.Template).Templates":        Getter,
	"(text/template.ExecError).Error":            Pure,
	"(text/template.ExecError).Unwrap":           Pure,
	"text/template.HTMLEscapeString":             Pure,
	"text/template.HTMLEscaper":                  Getter,
	"text/template.IsTrue":                       Pure,
	"text/template.JSEscapeString":               Pure,
	"text/template.JSEscaper":                    Getter,
	"text/template.New":                          Getter,
	"text/template.ParseFiles":                   Getter,
	"text/template.ParseGlob":                    Getter,
	"text/template.URLQueryEscaper":              Getter,

	"(*text/template/parse.ActionNode).Copy":       Getter,
	"(*text/template/parse.ActionNode).String":     Getter,
	"(*text/template/parse.BoolNode).Copy":         Getter,
	"(*text/template/parse.BoolNode).String":       Getter,
	"(*text/template/parse.BranchNode).Copy":       Getter,
	"(*text/template/parse.BranchNode).String":     Getter,
	"(*text/template/parse.ChainNode).Copy":        Getter,
	"(*text/template/parse.ChainNode).String":      Getter,
	"(*text/template/parse.CommandNode).Copy":      Getter,
	"(*text/template/parse.CommandNode).String":    Getter,
	"(*text/template/parse.DotNode).Copy":          Getter,
	"(*text/template/parse.DotNode).String":        Getter,
	"(*text/template/parse.DotNode).Type":          Getter,
	"(*text/template/parse.FieldNode).Copy":        Getter,
	"(*text/template/parse.FieldNode).String":      Getter,
	"(*text/template/parse.IdentifierNode).Copy":   Getter,
	"(*text/template/parse.IdentifierNode).String": Getter,
	"(*text/template/parse.IfNode).Copy":           Getter,
	"(*text/template/parse.ListNode).Copy":         Getter,
	"(*text/template/parse.ListNode).CopyList":     Getter,
	"(*text/template/parse.ListNode).String":       Getter,
	"(*text/template/parse.NilNode).Copy":          Getter,
	"(*text/template/parse.NilNode).String":        Getter,
	"(*text/template/parse.NilNode).Type":          Getter,
	"(*text/template/parse.NumberNode).Copy":       Getter,
	"(*text/template/parse.NumberNode).String":     Getter,
	"(*text/template/parse.PipeNode).Copy":         Getter,
	"(*text/template/parse.PipeNode).CopyPipe":     Getter,
	"(*text/template/parse.PipeNode).String":       Getter,
	"(*text/template/parse.RangeNode).Copy":        Getter,
	"(*text/template/parse.StringNode).Copy":       Getter,
	"(*text/template/parse.StringNode).String":     Getter,
	"(*text/template/parse.TemplateNode).Copy":     Getter,
	"(*text/template/parse.TemplateNode).String":   Getter,
	"(*text/template/parse.TextNode).Copy":         Getter,
	"(*text/template/parse.TextNode).String":       Getter,
	"(*text/template/parse.Tree).Copy":             Getter,
	"(*text/template/parse.Tree).ErrorContext":     Getter,
	"(*text/template/parse.VariableNode).Copy":     Getter,
	"(*text/template/parse.VariableNode).String":   Getter,
	"(*text/template/parse.WithNode).Copy":         Getter,
	"(text/template/parse.NodeType).Type":          Getter,
	"(text/template/parse.Pos).Position":           Pure,
	"text/template/parse.IsEmptyTree":              Getter,
	"text/template/parse.New":                      Getter,
	"text/template/parse.Parse":                    Getter,

	"(*encoding/csv.ParseError).Error":  Getter,
	"(*encoding/csv.ParseError).Unwrap": Getter,
	"(*encoding/csv.Writer).Error":      Getter,
	"encoding/csv.NewReader":            Getter,
	"encoding/csv.NewWriter":            Getter,

	"encoding/gob.NewDecoder": Getter,
	"encoding/gob.NewEncoder": Getter,

	"(encoding/hex.InvalidByteError).Error": Pure,
	"encoding/hex.DecodeString":             Pure,
	"encoding/hex.DecodedLen":               Pure,
	"encoding/hex.Dump":                     Pure,
	"encoding/hex.Dumper":                   Getter,
	"encoding/hex.EncodeToString":           Pure,
	"encoding/hex.EncodedLen":               Pure,
	"encoding/hex.NewDecoder":               Getter,
	"encoding/hex.NewEncoder":               Getter,

	"encoding/pem.Decode":         Pure,
	"encoding/pem.EncodeToMemory": Getter,

	"(*expvar.Float).String":  Getter,
	"(*expvar.Float).Value":   Getter,
	"(*expvar.Int).String":    Getter,
	"(*expvar.Int).Value":     Getter,
	"(*expvar.Map).Get":       Getter,
	"(*expvar.Map).String":    Getter,
	"(*expvar.String).String": Getter,
	"(*expvar.String).Value":  Getter,
	"expvar.Get":              Getter,
	"expvar.Handler":          Getter,

	"(*flag.FlagSet).Arg":           Getter,
	"(*flag.FlagSet).Args":          Getter,
	"(*flag.FlagSet).ErrorHandling": Getter,
	"(*flag.FlagSet).Lookup":        Getter,
	"(*flag.FlagSet).NArg":          Getter,
	"(*flag.FlagSet).NFlag":         Getter,
	"(*flag.FlagSet).Name":          Getter,
	"(*flag.FlagSet).Output":        Getter,
	"(*flag.FlagSet).Parsed":        Getter,
	"flag.Arg":                      Getter,
	"flag.Args":                     Getter,
	"flag.Lookup":                   Getter,
	"flag.NArg":                     Getter,
	"flag.NFlag":                    Getter,
	"flag.NewFlagSet":               Getter,
	"flag.Parsed":                   Getter,
	"flag.UnquoteUsage":             Getter,

	"(*sync/atomic.Value).Load": Getter,
	"sync/atomic.LoadInt32":     Getter,
	"sync/atomic.LoadInt64":     Getter,
	"sync/atomic.LoadPointer":   Getter,
	"sync/atomic.LoadUint32":    Getter,
	"sync/atomic.LoadUint64":    Getter,
	"sync/atomic.LoadUintptr":   Getter,

	"(*net.AddrError).Error":              Getter,
	"(*net.AddrError).Temporary":          Getter,
	"(*net.AddrError).Timeout":            Getter,
	"(*net.DNSConfigError).Error":         Getter,
	"(*net.DNSConfigError).Temporary":     Getter,
	"(*net.DNSConfigError).Timeout":       Getter,
	"(*net.DNSConfigError).Unwrap":        Getter,
	"(*net.DNSError).Error":               Getter,
	"(*net.DNSError).Temporary":           Getter,
	"(*net.DNSError).Timeout":             Getter,
	"(*net.IPAddr).Network":               Getter,
	"(*net.IPAddr).String":                Getter,
	"(*net.IPConn).LocalAddr":             Getter,
	"(*net.IPConn).RemoteAddr":            Getter,
	"(*net.IPConn).SyscallConn":           Getter,
	"(*net.IPNet).Contains":               Getter,
	"(*net.IPNet).Network":                Getter,
	"(*net.IPNet).String":                 Getter,
	"(*net.Interface).Addrs":              Getter,
	"(*net.Interface).MulticastAddrs":     Getter,
	"(*net.OpError).Error":                Getter,
	"(*net.OpError).Temporary":            Getter,
	"(*net.OpError).Timeout":              Getter,
	"(*net.OpError).Unwrap":               Getter,
	"(*net.ParseError).Error":             Getter,
	"(*net.TCPAddr).Network":              Getter,
	"(*net.TCPAddr).String":               Getter,
	"(*net.TCPConn).LocalAddr":            Getter,
	"(*net.TCPConn).RemoteAddr":           Getter,
	"(*net.TCPListener).Addr":             Getter,
	"(*net.UDPAddr).Network":              Getter,
	"(*net.UDPAddr).String":               Getter,
	"(*net.UDPConn).LocalAddr":            Getter,
	"(*net.UDPConn).RemoteAddr":           Getter,
	"(*net.UnixAddr).Network":             Getter,
	"(*net.UnixAddr).String":              Getter,
	"(*net.UnixConn).LocalAddr":           Getter,
	"(*net.UnixConn).RemoteAddr":          Getter,
	"(*net.UnixListener).Addr":            Getter,
	"(net.Flags).String":                  Pure,
	"(net.HardwareAddr).String":           Pure,
	"(net.IP).DefaultMask":                SlicePure,
	"(net.IP).Equal":                      SlicePure,
	"(net.IP).IsGlobalUnicast":            SlicePure,
	"(net.IP).IsInterfaceLocalMulticast":  SlicePure,
	"(net.IP).IsLinkLocalMulticast":       SlicePure,
	"(net.IP).IsLinkLocalUnicast":         SlicePure,
	"(net.IP).IsLoopback":                 SlicePure,
	"(net.IP).IsMulticast":                SlicePure,
	"(net.IP).IsUnspecified":              SlicePure,
	"(net.IP).MarshalText":                SlicePure,
	"(net.IP).Mask":                       SlicePure,
	"(net.IP).String":                     SlicePure,
	"(net.IP).To16":                       SlicePure,
	"(net.IP).To4":                        SlicePure,
	"(net.IPMask).Size":                   SlicePure,
	"(net.IPMask).String":                 SlicePure,
	"(net.InvalidAddrError).Error":        Pure,
	"(net.InvalidAddrError).Temporary":    Pure,
	"(net.InvalidAddrError).Timeout":      Pure,
	"(net.UnknownNetworkError).Error":     Pure,
	"(net.UnknownNetworkError).Temporary": Pure,
	"(net.UnknownNetworkError).Timeout":   Pure,
	"net.CIDRMask":                        SlicePure,
	"net.IPv4":                            SlicePure,
	"net.IPv4Mask":                        SlicePure,
	"net.InterfaceAddrs":                  Getter,
	"net.InterfaceByIndex":                Getter,
	"net.InterfaceByName":                 Getter,
	"net.Interfaces":                      Getter,
	"net.JoinHostPort":                    Pure,
	"net.ParseIP":                         SlicePure,
	"net.ParseMAC":                        SlicePure,
	"net.Pipe":                            Getter,
	"net.SplitHostPort":                   Pure,

	"(*net/mail.Address).String":          Getter,
	"(*net/mail.AddressParser).Parse":     Getter,
	"(*net/mail.AddressParser).ParseList": Getter,
	"(net/mail.Header).AddressList":       Getter,
	"(net/mail.Header).Date":              Getter,
	"(net/mail.Header).Get":               Getter,
	"net/mail.ParseAddress":               Getter,
	"net/mail.ParseAddressList":           Getter,
	"net/mail.ParseDate":                  Pure,

	"hash/adler32.Checksum": SlicePure,
	"hash/adler32.New":      Getter,

	"hash/crc32.Checksum":     SlicePure,
	"hash/crc32.ChecksumIEEE": SlicePure,
	"hash/crc32.New":          Getter,
	"hash/crc32.NewIEEE":      Getter,
	"hash/crc32.MakeTable":    Getter,

	"hash/crc64.Checksum":  SlicePure,
	"hash/crc64.New":       Getter,
	"hash/crc64.MakeTable": Getter,

	"hash/fnv.New128":  Getter,
	"hash/fnv.New128a": Getter,
	"hash/fnv.New32":   Getter,
	"hash/fnv.New32a":  Getter,
	"hash/fnv.New64":   Getter,
	"hash/fnv.New64a":  Getter,

	"(*hash/maphash.Hash).BlockSize": Getter,
	"(*hash/maphash.Hash).Seed":      Getter,
	"(*hash/maphash.Hash).Size":      Getter,
	"(*hash/maphash.Hash).Sum64":     Getter,
	"hash/maphash.MakeSeed":          Getter,

	"(*image.Alpha).AlphaAt":             Getter,
	"(*image.Alpha).At":                  Getter,
	"(*image.Alpha).Bounds":              Getter,
	"(*image.Alpha).ColorModel":          Pure,
	"(*image.Alpha).Opaque":              Getter,
	"(*image.Alpha).PixOffset":           Getter,
	"(*image.Alpha).SubImage":            Getter,
	"(*image.Alpha16).Alpha16At":         Getter,
	"(*image.Alpha16).At":                Getter,
	"(*image.Alpha16).Bounds":            Getter,
	"(*image.Alpha16).ColorModel":        Pure,
	"(*image.Alpha16).Opaque":            Getter,
	"(*image.Alpha16).PixOffset":         Getter,
	"(*image.Alpha16).SubImage":          Getter,
	"(*image.CMYK).At":                   Getter,
	"(*image.CMYK).Bounds":               Getter,
	"(*image.CMYK).CMYKAt":               Getter,
	"(*image.CMYK).ColorModel":           Pure,
	"(*image.CMYK).Opaque":               Getter,
	"(*image.CMYK).PixOffset":            Getter,
	"(*image.CMYK).SubImage":             Getter,
	"(*image.Gray).At":                   Getter,
	"(*image.Gray).Bounds":               Getter,
	"(*image.Gray).ColorModel":           Pure,
	"(*image.Gray).GrayAt":               Getter,
	"(*image.Gray).Opaque":               Getter,
	"(*image.Gray).PixOffset":            Getter,
	"(*image.Gray).SubImage":             Getter,
	"(*image.Gray16).At":                 Getter,
	"(*image.Gray16).Bounds":             Getter,
	"(*image.Gray16).ColorModel":         Pure,
	"(*image.Gray16).Gray16At":           Getter,
	"(*image.Gray16).Opaque":             Getter,
	"(*image.Gray16).PixOffset":          Getter,
	"(*image.Gray16).SubImage":           Getter,
	"(*image.NRGBA).At":                  Getter,
	"(*image.NRGBA).Bounds":              Getter,
	"(*image.NRGBA).ColorModel":          Pure,
	"(*image.NRGBA).NRGBAAt":             Getter,
	"(*image.NRGBA).Opaque":              Getter,
	"(*image.NRGBA).PixOffset":           Getter,
	"(*image.NRGBA).SubImage":            Getter,
	"(*image.NRGBA64).At":                Getter,
	"(*image.NRGBA64).Bounds":            Getter,
	"(*image.NRGBA64).ColorModel":        Pure,
	"(*image.NRGBA64).NRGBA64At":         Getter,
	"(*image.NRGBA64).Opaque":            Getter,
	"(*image.NRGBA64).PixOffset":         Getter,
	"(*image.NRGBA64).SubImage":          Getter,
	"(*image.NYCbCrA).AOffset":           Getter,
	"(*image.NYCbCrA).At":                Getter,
	"(*image.NYCbCrA).ColorModel":        Pure,
	"(*image.NYCbCrA).NYCbCrAAt":         Getter,
	"(*image.NYCbCrA).Opaque":            Getter,
	"(*image.NYCbCrA).SubImage":          Getter,
	"(*image.Paletted).At":               Getter,
	"(*image.Paletted).Bounds":           Getter,
	"(*image.Paletted).ColorIndexAt":     Getter,
	"(*image.Paletted).ColorModel":       Pure,
	"(*image.Paletted).Opaque":           Getter,
	"(*image.Paletted).PixOffset":        Getter,
	"(*image.Paletted).SubImage":         Getter,
	"(*image.RGBA).At":                   Getter,
	"(*image.RGBA).Bounds":               Getter,
	"(*image.RGBA).ColorModel":           Pure,
	"(*image.RGBA).Opaque":               Getter,
	"(*image.RGBA).PixOffset":            Getter,
	"(*image.RGBA).RGBAAt":               Getter,
	"(*image.RGBA).SubImage":             Getter,
	"(*image.RGBA64).At":                 Getter,
	"(*image.RGBA64).Bounds":             Getter,
	"(*image.RGBA64).ColorModel":         Pure,
	"(*image.RGBA64).Opaque":             Getter,
	"(*image.RGBA64).PixOffset":          Getter,
	"(*image.RGBA64).RGBA64At":           Getter,
	"(*image.RGBA64).SubImage":           Getter,
	"(*image.Uniform).At":                Getter,
	"(*image.Uniform).Bounds":            Getter,
	"(*image.Uniform).ColorModel":        Pure,
	"(*image.Uniform).Convert":           Getter,
	"(*image.Uniform).Opaque":            Getter,
	"(*image.Uniform).RGBA":              Getter,
	"(*image.YCbCr).At":                  Getter,
	"(*image.YCbCr).Bounds":              Getter,
	"(*image.YCbCr).COffset":             Getter,
	"(*image.YCbCr).ColorModel":          Pure,
	"(*image.YCbCr).Opaque":              Getter,
	"(*image.YCbCr).PixOffset":           Getter,
	"(*image.YCbCr).SubImage":            Getter,
	"(*image.YCbCr).YCbCrAt":             Getter,
	"(*image.YCbCr).YOffset":             Getter,
	"(image.Point).Add":                  Pure,
	"(image.Point).Div":                  Pure,
	"(image.Point).Eq":                   Pure,
	"(image.Point).In":                   Pure,
	"(image.Point).Mod":                  Pure,
	"(image.Point).Mul":                  Pure,
	"(image.Point).String":               Pure,
	"(image.Point).Sub":                  Pure,
	"(image.Rectangle).Add":              Pure,
	"(image.Rectangle).At":               Pure,
	"(image.Rectangle).Bounds":           Pure,
	"(image.Rectangle).Canon":            Pure,
	"(image.Rectangle).ColorModel":       Pure,
	"(image.Rectangle).Dx":               Pure,
	"(image.Rectangle).Dy":               Pure,
	"(image.Rectangle).Empty":            Pure,
	"(image.Rectangle).Eq":               Pure,
	"(image.Rectangle).In":               Pure,
	"(image.Rectangle).Inset":            Pure,
	"(image.Rectangle).Intersect":        Pure,
	"(image.Rectangle).Overlaps":         Pure,
	"(image.Rectangle).Size":             Pure,
	"(image.Rectangle).String":           Pure,
	"(image.Rectangle).Sub":              Pure,
	"(image.Rectangle).Union":            Pure,
	"(image.YCbCrSubsampleRatio).String": Pure,
	"image.NewAlpha":                     Getter,
	"image.NewAlpha16":                   Getter,
	"image.NewCMYK":                      Getter,
	"image.NewGray":                      Getter,
	"image.NewGray16":                    Getter,
	"image.NewNRGBA":                     Getter,
	"image.NewNRGBA64":                   Getter,
	"image.NewNYCbCrA":                   Getter,
	"image.NewPaletted":                  Getter,
	"image.NewRGBA":                      Getter,
	"image.NewRGBA64":                    Getter,
	"image.NewUniform":                   Getter,
	"image.NewYCbCr":                     Getter,
	"image.Pt":                           Pure,
	"image.Rect":                         Pure,

	"log/syslog.NewLogger": Getter,

	"net/rpc.NewClient":           Getter,
	"net/rpc.NewClientWithCodec":  Getter,
	"net/rpc.NewServer":           Getter,
	"(net/rpc.ServerError).Error": Pure,

	"(*encoding/json.Decoder).Buffered":            Getter,
	"(*encoding/json.Decoder).InputOffset":         Getter,
	"(*encoding/json.Decoder).More":                Getter,
	"(*encoding/json.InvalidUnmarshalError).Error": Getter,
	"(*encoding/json.MarshalerError).Error":        Getter,
	"(*encoding/json.MarshalerError).Unwrap":       Getter,
	"(*encoding/json.SyntaxError).Error":           Getter,
	"(*encoding/json.UnmarshalFieldError).Error":   Getter,
	"(*encoding/json.UnmarshalTypeError).Error":    Getter,
	"(*encoding/json.UnsupportedTypeError).Error":  Getter,
	"(*encoding/json.UnsupportedValueError).Error": Getter,
	"(encoding/json.Delim).String":                 Pure,
	"(encoding/json.InvalidUTF8Error).Error":       Getter,
	"(encoding/json.Number).Float64":               Pure,
	"(encoding/json.Number).Int64":                 Pure,
	"(encoding/json.Number).String":                Pure,
	"(encoding/json.RawMessage).MarshalJSON":       SlicePure,
	"encoding/json.Marshal":                        Getter,
	"encoding/json.MarshalIndent":                  Getter,
	"encoding/json.NewDecoder":                     Getter,
	"encoding/json.NewEncoder":                     Getter,
	"encoding/json.Valid":                          Pure,

	"(*encoding/xml.Decoder).InputOffset":        Getter,
	"(*encoding/xml.SyntaxError).Error":          Getter,
	"(*encoding/xml.TagPathError).Error":         Getter,
	"(*encoding/xml.UnsupportedTypeError).Error": Getter,
	"(encoding/xml.CharData).Copy":               SlicePure,
	"(encoding/xml.Comment).Copy":                SlicePure,
	"(encoding/xml.Directive).Copy":              SlicePure,
	"(encoding/xml.ProcInst).Copy":               SlicePure,
	"(encoding/xml.StartElement).Copy":           SlicePure,
	"(encoding/xml.StartElement).End":            SlicePure,
	"(encoding/xml.UnmarshalError).Error":        Pure,
	"encoding/xml.CopyToken":                     Getter,
	"encoding/xml.Marshal":                       Getter,
	"encoding/xml.MarshalIndent":                 Getter,
	"encoding/xml.NewDecoder":                    Getter,
	"encoding/xml.NewEncoder":                    Getter,
	"encoding/xml.NewTokenDecoder":               Getter,

	"net/rpc/jsonrpc.NewClient":      Getter,
	"net/rpc/jsonrpc.NewClientCodec": Getter,
	"net/rpc/jsonrpc.NewServerCodec": Getter,

	"compress/bzip2.NewReader":               Getter,
	"(compress/bzip2.StructuralError).Error": Pure,

	"(*compress/flate.ReadError).Error":        Getter,
	"(*compress/flate.WriteError).Error":       Getter,
	"(compress/flate.CorruptInputError).Error": Pure,
	"(compress/flate.InternalError).Error":     Pure,
	"compress/flate.NewReader":                 Getter,
	"compress/flate.NewReaderDict":             Getter,
	"compress/flate.NewWriter":                 Getter,
	"compress/flate.NewWriterDict":             Getter,

	"compress/gzip.NewReader":      Getter,
	"compress/gzip.NewWriter":      Getter,
	"compress/gzip.NewWriterLevel": Getter,

	"compress/lzw.NewReader": Getter,
	"compress/lzw.NewWriter": Getter,

	"compress/zlib.NewReader":          Getter,
	"compress/zlib.NewReaderDict":      Getter,
	"compress/zlib.NewWriter":          Getter,
	"compress/zlib.NewWriterLevel":     Getter,
	"compress/zlib.NewWriterLevelDict": Getter,

	"net/smtp.CRAMMD5Auth": Getter,
	"net/smtp.NewClient":   Getter,
	"net/smtp.PlainAuth":   Getter,

	"(*net/textproto.Error).Error":         Getter,
	"(*net/textproto.Reader).DotReader":    Getter,
	"(*net/textproto.Writer).DotWriter":    Getter,
	"(net/textproto.MIMEHeader).Get":       Getter,
	"(net/textproto.MIMEHeader).Values":    Getter,
	"(net/textproto.ProtocolError).Error":  Pure,
	"net/textproto.CanonicalMIMEHeaderKey": Pure,
	"net/textproto.NewConn":                Getter,
	"net/textproto.NewReader":              Getter,
	"net/textproto.NewWriter":              Getter,
	"net/textproto.TrimBytes":              SlicePure,
	"net/textproto.TrimString":             Pure,

	"(*html/template.Error).Error":               Getter,
	"(*html/template.Template).Clone":            Getter,
	"(*html/template.Template).DefinedTemplates": Getter,
	"(*html/template.Template).Lookup":           Getter,
	"(*html/template.Template).Name":             Getter,
	"(*html/template.Template).Templates":        Getter,
	"html/template.HTMLEscapeString":             Pure,
	"html/template.HTMLEscaper":                  Getter,
	"html/template.IsTrue":                       Pure,
	"html/template.JSEscapeString":               Pure,
	"html/template.JSEscaper":                    Getter,
	"html/template.New":                          Getter,
	"html/template.ParseFiles":                   Getter,
	"html/template.ParseGlob":                    Getter,
	"html/template.URLQueryEscaper":              Getter,

	"(*database/sql.ColumnType).DatabaseTypeName": Getter,
	"(*database/sql.ColumnType).DecimalSize":      Getter,
	"(*database/sql.ColumnType).Length":           Getter,
	"(*database/sql.ColumnType).Name":             Getter,
	"(*database/sql.ColumnType).Nullable":         Getter,
	"(*database/sql.ColumnType).ScanType":         Getter,
	"(*database/sql.DB).Driver":                   Getter,
	"(*database/sql.DB).Stats":                    Getter,
	"(*database/sql.Row).Err":                     Getter,
	"(*database/sql.Rows).ColumnTypes":            Getter,
	"(*database/sql.Rows).Columns":                Getter,
	"(*database/sql.Rows).Err":                    Getter,
	"(database/sql.IsolationLevel).String":        Pure,
	"(database/sql.NullBool).Value":               Pure,
	"(database/sql.NullFloat64).Value":            Pure,
	"(database/sql.NullInt32).Value":              Pure,
	"(database/sql.NullInt64).Value":              Pure,
	"(database/sql.NullString).Value":             Pure,
	"(database/sql.NullTime).Value":               Pure,
	"database/sql.Drivers":                        Getter,
	"database/sql.Named":                          Getter,
	"database/sql.Open":                           Getter,
	"database/sql.OpenDB":                         Getter,

	"(database/sql/driver.NotNull).ConvertValue":      Getter,
	"(database/sql/driver.Null).ConvertValue":         Getter,
	"(database/sql/driver.RowsAffected).LastInsertId": Getter,
	"(database/sql/driver.RowsAffected).RowsAffected": Getter,
	"database/sql/driver.IsScanValue":                 Pure,
	"database/sql/driver.IsValue":                     Pure,

	"(*net/url.Error).Error":           Getter,
	"(*net/url.Error).Temporary":       Getter,
	"(*net/url.Error).Timeout":         Getter,
	"(*net/url.Error).Unwrap":          Getter,
	"(*net/url.URL).EscapedFragment":   Getter,
	"(*net/url.URL).EscapedPath":       Getter,
	"(*net/url.URL).Hostname":          Getter,
	"(*net/url.URL).IsAbs":             Getter,
	"(*net/url.URL).MarshalBinary":     Getter,
	"(*net/url.URL).Parse":             Getter,
	"(*net/url.URL).Port":              Getter,
	"(*net/url.URL).Query":             Getter,
	"(*net/url.URL).Redacted":          Getter,
	"(*net/url.URL).RequestURI":        Getter,
	"(*net/url.URL).ResolveReference":  Getter,
	"(*net/url.URL).String":            Getter,
	"(*net/url.Userinfo).Password":     Getter,
	"(*net/url.Userinfo).String":       Getter,
	"(*net/url.Userinfo).Username":     Getter,
	"(net/url.EscapeError).Error":      Pure,
	"(net/url.InvalidHostError).Error": Pure,
	"(net/url.Values).Encode":          Getter,
	"(net/url.Values).Get":             Getter,
	"net/url.Parse":                    Getter,
	"net/url.ParseQuery":               Getter,
	"net/url.ParseRequestURI":          Getter,
	"net/url.PathEscape":               Pure,
	"net/url.PathUnescape":             Pure,
	"net/url.QueryEscape":              Pure,
	"net/url.QueryUnescape":            Pure,
	"net/url.User":                     Getter,
	"net/url.UserPassword":             Getter,

	"(crypto.Hash).Available": Pure,
	"(crypto.Hash).HashFunc":  Pure,
	"(crypto.Hash).New":       Getter,
	"(crypto.Hash).Size":      Pure,
	"(crypto.Hash).String":    Pure,

	"(image/color.Alpha).RGBA":      Pure,
	"(image/color.Alpha16).RGBA":    Pure,
	"(image/color.CMYK).RGBA":       Pure,
	"(image/color.Gray).RGBA":       Pure,
	"(image/color.Gray16).RGBA":     Pure,
	"(image/color.NRGBA).RGBA":      Pure,
	"(image/color.NRGBA64).RGBA":    Pure,
	"(image/color.NYCbCrA).RGBA":    Pure,
	"(image/color.Palette).Convert": Getter,
	"(image/color.Palette).Index":   Getter,
	"(image/color.RGBA).RGBA":       Pure,
	"(image/color.YcbCr).RGBA":      Pure,
	"image/color.CMYKToRGB":         Pure,
	"image/color.ModelFunc":         Getter,
	"image/color.RGBToCMYK":         Pure,
	"image/color.RGBToYCbCr":        Pure,
	"image/color.YCbCrToRGB":        Pure,

	"(image/png.FormatError).Error":      Pure,
	"(image/png.UnsupportedError).Error": Pure,

	"(image/jpeg.FormatError).Error":      Pure,
	"(image/jpeg.UnsupportedError).Error": Pure,

	"(*index/suffixarray.Index).Bytes":        Getter,
	"(*index/suffixarray.Index).FindAllIndex": Getter,
	"(*index/suffixarray.Index).Lookup":       Getter,
	"index/suffixarray.New":                   Getter,

	"(*io.SectionReader).Size": Getter,
	"io.LimitReader":           Getter,
	"io.MultiReader":           Getter,
	"io.MultiWriter":           Getter,
	"io.NewSectionReader":      Getter,
	"io.Pipe":                  Getter,
	"io.TeeReader":             Getter,

	"io/ioutil.NopCloser": Getter,
	"io/ioutil.ReadAll":   Getter,
	"io/ioutil.ReadDir":   Getter,
	"io/ioutil.ReadFile":  Getter,

	"math.Abs":             Pure,
	"math.Acos":            Pure,
	"math.Acosh":           Pure,
	"math.Asin":            Pure,
	"math.Asinh":           Pure,
	"math.Atan":            Pure,
	"math.Atan2":           Pure,
	"math.Atanh":           Pure,
	"math.Cbrt":            Pure,
	"math.Ceil":            Pure,
	"math.Copysign":        Pure,
	"math.Cos":             Pure,
	"math.Cosh":            Pure,
	"math.Dim":             Pure,
	"math.Erf":             Pure,
	"math.Erfc":            Pure,
	"math.Erfcinv":         Pure,
	"math.Erfinv":          Pure,
	"math.Exp":             Pure,
	"math.Exp2":            Pure,
	"math.Expm1":           Pure,
	"math.FMA":             Pure,
	"math.Float32bits":     Pure,
	"math.Float32frombits": Pure,
	"math.Float64bits":     Pure,
	"math.Float64frombits": Pure,
	"math.Floor":           Pure,
	"math.Frexp":           Pure,
	"math.Gamma":           Pure,
	"math.Hypot":           Pure,
	"math.Ilogb":           Pure,
	"math.Inf":             Pure,
	"math.IsInf":           Pure,
	"math.IsNaN":           Pure,
	"math.J0":              Pure,
	"math.J1":              Pure,
	"math.Jn":              Pure,
	"math.Ldexp":           Pure,
	"math.Lgamma":          Pure,
	"math.Log":             Pure,
	"math.Log10":           Pure,
	"math.Log1p":           Pure,
	"math.Log2":            Pure,
	"math.Logb":            Pure,
	"math.Max":             Pure,
	"math.Min":             Pure,
	"math.Mod":             Pure,
	"math.Modf":            Pure,
	"math.NaN":             Pure,
	"math.Nextafter":       Pure,
	"math.Nextafter32":     Pure,
	"math.Pow":             Pure,
	"math.Pow10":           Pure,
	"math.Remainder":       Pure,
	"math.Round":           Pure,
	"math.RoundToEven":     Pure,
	"math.Signbit":         Pure,
	"math.Sin":             Pure,
	"math.Sincos":          Pure,
	"math.Sinh":            Pure,
	"math.Sqrt":            Pure,
	"math.Tan":             Pure,
	"math.Tanh":            Pure,
	"math.Trunc":           Pure,
	"math.Y0":              Pure,
	"math.Y1":              Pure,
	"math.Yn":              Pure,

	"math/bits.Add":             Pure,
	"math/bits.Add32":           Pure,
	"math/bits.Add64":           Pure,
	"math/bits.Div":             Pure,
	"math/bits.Div32":           Pure,
	"math/bits.Div64":           Pure,
	"math/bits.LeadingZeros":    Pure,
	"math/bits.LeadingZeros16":  Pure,
	"math/bits.LeadingZeros32":  Pure,
	"math/bits.LeadingZeros64":  Pure,
	"math/bits.LeadingZeros8":   Pure,
	"math/bits.Len":             Pure,
	"math/bits.Len16":           Pure,
	"math/bits.Len32":           Pure,
	"math/bits.Len64":           Pure,
	"math/bits.Len8":            Pure,
	"math/bits.Mul":             Pure,
	"math/bits.Mul32":           Pure,
	"math/bits.Mul64":           Pure,
	"math/bits.OnesCount":       Pure,
	"math/bits.OnesCount16":     Pure,
	"math/bits.OnesCount32":     Pure,
	"math/bits.OnesCount64":     Pure,
	"math/bits.OnesCount8":      Pure,
	"math/bits.Rem":             Pure,
	"math/bits.Rem32":           Pure,
	"math/bits.Rem64":           Pure,
	"math/bits.Reverse":         Pure,
	"math/bits.Reverse16":       Pure,
	"math/bits.Reverse32":       Pure,
	"math/bits.Reverse64":       Pure,
	"math/bits.Reverse8":        Pure,
	"math/bits.ReverseBytes":    Pure,
	"math/bits.ReverseBytes16":  Pure,
	"math/bits.ReverseBytes32":  Pure,
	"math/bits.ReverseBytes64":  Pure,
	"math/bits.RotateLeft":      Pure,
	"math/bits.RotateLeft16":    Pure,
	"math/bits.RotateLeft32":    Pure,
	"math/bits.RotateLeft64":    Pure,
	"math/bits.RotateLeft8":     Pure,
	"math/bits.Sub":             Pure,
	"math/bits.Sub32":           Pure,
	"math/bits.Sub64":           Pure,
	"math/bits.TrailingZeros":   Pure,
	"math/bits.TrailingZeros16": Pure,
	"math/bits.TrailingZeros32": Pure,
	"math/bits.TrailingZeros64": Pure,
	"math/bits.TrailingZeros8":  Pure,

	"math/cmplx.Abs":   Pure,
	"math/cmplx.Acos":  Pure,
	"math/cmplx.Acosh": Pure,
	"math/cmplx.Asin":  Pure,
	"math/cmplx.Asinh": Pure,
	"math/cmplx.Atan":  Pure,
	"math/cmplx.Atanh": Pure,
	"math/cmplx.Conj":  Pure,
	"math/cmplx.Cos":   Pure,
	"math/cmplx.Cosh":  Pure,
	"math/cmplx.Cot":   Pure,
	"math/cmplx.Exp":   Pure,
	"math/cmplx.Inf":   Pure,
	"math/cmplx.IsInf": Pure,
	"math/cmplx.IsNaN": Pure,
	"math/cmplx.Log":   Pure,
	"math/cmplx.Log10": Pure,
	"math/cmplx.NaN":   Pure,
	"math/cmplx.Phase": Pure,
	"math/cmplx.Polar": Pure,
	"math/cmplx.Pow":   Pure,
	"math/cmplx.Rect":  Pure,
	"math/cmplx.Sin":   Pure,
	"math/cmplx.Sinh":  Pure,
	"math/cmplx.Sqrt":  Pure,
	"math/cmplx.Tan":   Pure,
	"math/cmplx.Tanh":  Pure,

	"(*debug/dwarf.ArrayType).Size":       Getter,
	"(*debug/dwarf.ArrayType).String":     Getter,
	"(*debug/dwarf.BasicType).Basic":      Pure,
	"(*debug/dwarf.BasicType).String":     Getter,
	"(*debug/dwarf.CommonType).Common":    Pure,
	"(*debug/dwarf.CommonType).Size":      Getter,
	"(*debug/dwarf.Data).LineReader":      Getter,
	"(*debug/dwarf.Data).Ranges":          Getter,
	"(*debug/dwarf.Data).Reader":          Getter,
	"(*debug/dwarf.Data).Type":            Getter,
	"(*debug/dwarf.DotDotDotType).String": Getter,
	"(*debug/dwarf.Entry).AttrField":      Getter,
	"(*debug/dwarf.Entry).Val":            Getter,
	"(*debug/dwarf.EnumType).String":      Getter,
	"(*debug/dwarf.FuncType).String":      Getter,
	"(*debug/dwarf.LineReader).Files":     Getter,
	"(*debug/dwarf.LineReader).Tell":      Getter,
	"(*debug/dwarf.PtrType).String":       Getter,
	"(*debug/dwarf.QualType).Size":        Getter,
	"(*debug/dwarf.QualType).String":      Getter,
	"(*debug/dwarf.Reader).AddressSize":   Getter,
	"(*debug/dwarf.Reader).ByteOrder":     Getter,
	"(*debug/dwarf.StructType).Defn":      Getter,
	"(*debug/dwarf.StructType).String":    Getter,
	"(*debug/dwarf.TypedefType).Size":     Getter,
	"(*debug/dwarf.TypedefType).String":   Getter,
	"(*debug/dwarf.UnsupportedType).Size": Getter,
	"(*debug/dwarf.VoidType).Size":        Getter,
	"(debug/dwarf.Attr).GoString":         Pure,
	"(debug/dwarf.Attr).String":           Pure,
	"(debug/dwarf.Class).GoString":        Pure,
	"(debug/dwarf.Class).String":          Pure,
	"(debug/dwarf.DecodeError).Error":     Pure,
	"(debug/dwarf.Tag).GoString":          Pure,
	"(debug/dwarf.Tag).String":            Pure,
	"debug/dwarf.New":                     Getter,

	"(*debug/elf.File).DWARF":              Getter,
	"(*debug/elf.File).DynString":          Getter,
	"(*debug/elf.File).DynamicSymbols":     Getter,
	"(*debug/elf.File).ImportedLibraries":  Getter,
	"(*debug/elf.File).ImportedSymbols":    Getter,
	"(*debug/elf.File).Section":            Getter,
	"(*debug/elf.File).SectionByType":      Getter,
	"(*debug/elf.File).Symbols":            Getter,
	"(*debug/elf.FormatError).Error":       Getter,
	"(*debug/elf.Prog).Open":               Getter,
	"(*debug/elf.Section).Data":            Getter,
	"(*debug/elf.Section).Open":            Getter,
	"(debug/elf.Class).GoString":           Pure,
	"(debug/elf.Class).String":             Pure,
	"(debug/elf.CompressionType).GoString": Pure,
	"(debug/elf.CompressionType).String":   Pure,
	"(debug/elf.Data).GoString":            Pure,
	"(debug/elf.Data).String":              Pure,
	"(debug/elf.DynFlag).GoString":         Pure,
	"(debug/elf.DynFlag).String":           Pure,
	"(debug/elf.DynTag).GoString":          Pure,
	"(debug/elf.DynTag).String":            Pure,
	"(debug/elf.Machine).GoString":         Pure,
	"(debug/elf.Machine).String":           Pure,
	"(debug/elf.NType).GoString":           Pure,
	"(debug/elf.NType).String":             Pure,
	"(debug/elf.OSABI).GoString":           Pure,
	"(debug/elf.OSABI).String":             Pure,
	"(debug/elf.ProgFlag).GoString":        Pure,
	"(debug/elf.ProgFlag).String":          Pure,
	"(debug/elf.ProgType).GoString":        Pure,
	"(debug/elf.ProgType).String":          Pure,
	"(debug/elf.R_386).GoString":           Pure,
	"(debug/elf.R_386).String":             Pure,
	"(debug/elf.R_390).GoString":           Pure,
	"(debug/elf.R_390).String":             Pure,
	"(debug/elf.R_AARCH64).GoString":       Pure,
	"(debug/elf.R_AARCH64).String":         Pure,
	"(debug/elf.R_ALPHA).GoString":         Pure,
	"(debug/elf.R_ALPHA).String":           Pure,
	"(debug/elf.R_ARM).GoString":           Pure,
	"(debug/elf.R_ARM).String":             Pure,
	"(debug/elf.R_MIPS).GoString":          Pure,
	"(debug/elf.R_MIPS).String":            Pure,
	"(debug/elf.R_PPC).GoString":           Pure,
	"(debug/elf.R_PPC).String":             Pure,
	"(debug/elf.R_PPC64).GoString":         Pure,
	"(debug/elf.R_PPC64).String":           Pure,
	"(debug/elf.R_RISCV).GoString":         Pure,
	"(debug/elf.R_RISCV).String":           Pure,
	"(debug/elf.R_SPARC).GoString":         Pure,
	"(debug/elf.R_SPARC).String":           Pure,
	"(debug/elf.R_X86_64).GoString":        Pure,
	"(debug/elf.R_X86_64).String":          Pure,
	"(debug/elf.SectionFlag).GoString":     Pure,
	"(debug/elf.SectionFlag).String":       Pure,
	"(debug/elf.SectionIndex).GoString":    Pure,
	"(debug/elf.SectionIndex).String":      Pure,
	"(debug/elf.SectionType).GoString":     Pure,
	"(debug/elf.SectionType).String":       Pure,
	"(debug/elf.SymBind).GoString":         Pure,
	"(debug/elf.SymBind).String":           Pure,
	"(debug/elf.SymType).GoString":         Pure,
	"(debug/elf.SymType).String":           Pure,
	"(debug/elf.SymVis).GoString":          Pure,
	"(debug/elf.SymVis).String":            Pure,
	"(debug/elf.Type).GoString":            Pure,
	"(debug/elf.Type).String":              Pure,
	"(debug/elf.Version).GoString":         Pure,
	"(debug/elf.Version).String":           Pure,
	"debug/elf.NewFile":                    Getter,
	"debug/elf.Open":                       Getter,
	"debug/elf.R_INFO32":                   Pure,
	"debug/elf.R_INFO":                     Pure,
	"debug/elf.R_SYM32":                    Pure,
	"debug/elf.R_SYM64":                    Pure,
	"debug/elf.R_TYPE32":                   Pure,
	"debug/elf.R_TYPE64":                   Pure,
	"debug/elf.ST_BIND":                    Pure,
	"debug/elf.ST_INFO":                    Pure,
	"debug/elf.ST_TYPE":                    Pure,
	"debug/elf.ST_VISIBILITY":              Pure,

	"(*debug/gosym.DecodingError).Error":    Getter,
	"(*debug/gosym.LineTable).LineToPC":     Getter,
	"(*debug/gosym.LineTable).PCToLine":     Getter,
	"(*debug/gosym.Sym).BaseName":           Getter,
	"(*debug/gosym.Sym).PackageName":        Getter,
	"(*debug/gosym.Sym).ReceiverName":       Getter,
	"(*debug/gosym.Sym).Static":             Getter,
	"(*debug/gosym.Table).LineToPC":         Getter,
	"(*debug/gosym.Table).LookupFunc":       Getter,
	"(*debug/gosym.Table).LookupSym":        Getter,
	"(*debug/gosym.Table).PCToFunc":         Getter,
	"(*debug/gosym.Table).PCToLine":         Getter,
	"(*debug/gosym.Table).SymByAddr":        Getter,
	"(*debug/gosym.UnknownLineError).Error": Getter,
	"(debug/gosym.UnknownFileError).Error":  Pure,
	"debug/gosym.NewLineTable":              Getter,
	"debug/gosym.NewTable":                  Getter,

	"(*debug/macho.File).DWARF":               Getter,
	"(*debug/macho.File).ImportedLibraries":   Getter,
	"(*debug/macho.File).ImportedSymbols":     Getter,
	"(*debug/macho.File).Section":             Getter,
	"(*debug/macho.File).Segment":             Getter,
	"(*debug/macho.FormatError).Error":        Getter,
	"(*debug/macho.Section).Data":             Getter,
	"(*debug/macho.Section).Open":             Getter,
	"(*debug/macho.Segment).Data":             Getter,
	"(*debug/macho.Segment).Open":             Getter,
	"(debug/macho.Cpu).GoString":              Pure,
	"(debug/macho.Cpu).String":                Pure,
	"(debug/macho.LoadBytes).Error":           SlicePure,
	"(debug/macho.LoadCmd).GoString":          Pure,
	"(debug/macho.LoadCmd).String":            Pure,
	"(debug/macho.RelocTypeARM).GoString":     Pure,
	"(debug/macho.RelocTypeARM).String":       Pure,
	"(debug/macho.RelocTypeARM64).GoString":   Pure,
	"(debug/macho.RelocTypeARM64).String":     Pure,
	"(debug/macho.RelocTypeGeneric).GoString": Pure,
	"(debug/macho.RelocTypeGeneric).String":   Pure,
	"(debug/macho.RelocTypeX86_64).GoString":  Pure,
	"(debug/macho.RelocTypeX86_64).String":    Pure,
	"(debug/macho.Type).GoString":             Pure,
	"(debug/macho.Type).String":               Pure,
	"debug/macho.NewFatFile":                  Getter,
	"debug/macho.NewFile":                     Getter,
	"debug/macho.Open":                        Getter,
	"debug/macho.OpenFat":                     Getter,

	"(*debug/pe.COFFSymbol).FullName":    Getter,
	"(*debug/pe.File).DWARF":             Getter,
	"(*debug/pe.File).ImportedLibraries": Getter,
	"(*debug/pe.File).ImportedSymbols":   Getter,
	"(*debug/pe.File).Section":           Getter,
	"(*debug/pe.FormatError).Error":      Pure,
	"(*debug/pe.Section).Data":           Getter,
	"(*debug/pe.Section).Open":           Getter,
	"(debug/pe.StringTable).String":      SlicePure,
	"debug/pe.NewFile":                   Getter,
	"debug/pe.Open":                      Getter,

	"(*debug/plan9obj.File).Section": Getter,
	"(*debug/plan9obj.File).Symbols": Getter,
	"(*debug/plan9obj.Section).Data": Getter,
	"(*debug/plan9obj.Section).Open": Getter,
	"debug/plan9obj.NewFile":         Getter,
	"debug/plan9obj.Open":            Getter,

	// we don't mark most of math/rand as getters, in case users want
	// to advance the PRNG without actually inspecting the values, for
	// whatever reason that may be.
	"math/rand.New":       Getter,
	"math/rand.NewSource": Getter,
	"math/rand.NewZipf":   Getter,

	"(*go/ast.ArrayType).End":       Getter,
	"(*go/ast.ArrayType).Pos":       Getter,
	"(*go/ast.AssignStmt).End":      Getter,
	"(*go/ast.AssignStmt).Pos":      Getter,
	"(*go/ast.BadDecl).End":         Getter,
	"(*go/ast.BadDecl).Pos":         Getter,
	"(*go/ast.BadExpr).End":         Getter,
	"(*go/ast.BadExpr).Pos":         Getter,
	"(*go/ast.BadStmt).End":         Getter,
	"(*go/ast.BadStmt).Pos":         Getter,
	"(*go/ast.BasicLit).End":        Getter,
	"(*go/ast.BasicLit).Pos":        Getter,
	"(*go/ast.BinaryExpr).End":      Getter,
	"(*go/ast.BinaryExpr).Pos":      Getter,
	"(*go/ast.BlockStmt).End":       Getter,
	"(*go/ast.BlockStmt).Pos":       Getter,
	"(*go/ast.BranchStmt).End":      Getter,
	"(*go/ast.BranchStmt).Pos":      Getter,
	"(*go/ast.CallExpr).End":        Getter,
	"(*go/ast.CallExpr).Pos":        Getter,
	"(*go/ast.CaseClause).End":      Getter,
	"(*go/ast.CaseClause).Pos":      Getter,
	"(*go/ast.ChanType).End":        Getter,
	"(*go/ast.ChanType).Pos":        Getter,
	"(*go/ast.CommClause).End":      Getter,
	"(*go/ast.CommClause).Pos":      Getter,
	"(*go/ast.Comment).End":         Getter,
	"(*go/ast.Comment).Pos":         Getter,
	"(*go/ast.CommentGroup).End":    Getter,
	"(*go/ast.CommentGroup).Pos":    Getter,
	"(*go/ast.CommentGroup).Text":   Getter,
	"(*go/ast.CompositeLit).End":    Getter,
	"(*go/ast.CompositeLit).Pos":    Getter,
	"(*go/ast.DeclStmt).End":        Getter,
	"(*go/ast.DeclStmt).Pos":        Getter,
	"(*go/ast.DeferStmt).End":       Getter,
	"(*go/ast.DeferStmt).Pos":       Getter,
	"(*go/ast.Ellipsis).End":        Getter,
	"(*go/ast.Ellipsis).Pos":        Getter,
	"(*go/ast.EmptyStmt).End":       Getter,
	"(*go/ast.EmptyStmt).Pos":       Getter,
	"(*go/ast.ExprStmt).End":        Getter,
	"(*go/ast.ExprStmt).Pos":        Getter,
	"(*go/ast.Field).End":           Getter,
	"(*go/ast.Field).Pos":           Getter,
	"(*go/ast.FieldList).End":       Getter,
	"(*go/ast.FieldList).NumFields": Getter,
	"(*go/ast.FieldList).Pos":       Getter,
	"(*go/ast.File) End":            Getter,
	"(*go/ast.File) Pos":            Getter,
	"(*go/ast.ForStmt).End":         Getter,
	"(*go/ast.ForStmt).Pos":         Getter,
	"(*go/ast.FuncDecl).End":        Getter,
	"(*go/ast.FuncDecl).Pos":        Getter,
	"(*go/ast.FuncLit).End":         Getter,
	"(*go/ast.FuncLit).Pos":         Getter,
	"(*go/ast.FuncType).End":        Getter,
	"(*go/ast.FuncType).Pos":        Getter,
	"(*go/ast.GenDecl).End":         Getter,
	"(*go/ast.GenDecl).Pos":         Getter,
	"(*go/ast.GoStmt).End":          Getter,
	"(*go/ast.GoStmt).Pos":          Getter,
	"(*go/ast.Ident).End":           Getter,
	"(*go/ast.Ident).IsExported":    Getter,
	"(*go/ast.Ident).Pos":           Getter,
	"(*go/ast.Ident).String":        Getter,
	"(*go/ast.IfStmt).End":          Getter,
	"(*go/ast.IfStmt).Pos":          Getter,
	"(*go/ast.ImportSpec).End":      Getter,
	"(*go/ast.ImportSpec).Pos":      Getter,
	"(*go/ast.IncDecStmt).End":      Getter,
	"(*go/ast.IncDecStmt).Pos":      Getter,
	"(*go/ast.IndexExpr).End":       Getter,
	"(*go/ast.IndexExpr).Pos":       Getter,
	"(*go/ast.InterfaceType).End":   Getter,
	"(*go/ast.InterfaceType).Pos":   Getter,
	"(*go/ast.KeyValueExpr).End":    Getter,
	"(*go/ast.KeyValueExpr).Pos":    Getter,
	"(*go/ast.LabeledStmt).End":     Getter,
	"(*go/ast.LabeledStmt).Pos":     Getter,
	"(*go/ast.MapType).End":         Getter,
	"(*go/ast.MapType).Pos":         Getter,
	"(*go/ast.Object).Pos":          Getter,
	"(*go/ast.Package).End":         Getter,
	"(*go/ast.Package).Pos":         Getter,
	"(*go/ast.ParenExpr).End":       Getter,
	"(*go/ast.ParenExpr).Pos":       Getter,
	"(*go/ast.RangeStmt).End":       Getter,
	"(*go/ast.RangeStmt).Pos":       Getter,
	"(*go/ast.ReturnStmt).End":      Getter,
	"(*go/ast.ReturnStmt).Pos":      Getter,
	"(*go/ast.Scope).Lookup":        Getter,
	"(*go/ast.Scope).String":        Getter,
	"(*go/ast.SelectStmt).End":      Getter,
	"(*go/ast.SelectStmt).Pos":      Getter,
	"(*go/ast.SelectorExpr).End":    Getter,
	"(*go/ast.SelectorExpr).Pos":    Getter,
	"(*go/ast.SendStmt).End":        Getter,
	"(*go/ast.SendStmt).Pos":        Getter,
	"(*go/ast.SliceExpr).End":       Getter,
	"(*go/ast.SliceExpr).Pos":       Getter,
	"(*go/ast.StarExpr).End":        Getter,
	"(*go/ast.StarExpr).Pos":        Getter,
	"(*go/ast.StructType).End":      Getter,
	"(*go/ast.StructType).Pos":      Getter,
	"(*go/ast.SwitchStmt).End":      Getter,
	"(*go/ast.SwitchStmt).Pos":      Getter,
	"(*go/ast.TypeAssertExpr) End":  Getter,
	"(*go/ast.TypeAssertExpr) Pos":  Getter,
	"(*go/ast.TypeSpec).End":        Getter,
	"(*go/ast.TypeSpec).Pos":        Getter,
	"(*go/ast.TypeSwitchStmt) End":  Getter,
	"(*go/ast.TypeSwitchStmt) Pos":  Getter,
	"(*go/ast.UnaryExpr).End":       Getter,
	"(*go/ast.UnaryExpr).Pos":       Getter,
	"(*go/ast.ValueSpec).End":       Getter,
	"(*go/ast.ValueSpec).Pos":       Getter,
	"(go/ast.CommentMap).Comments":  Getter,
	"(go/ast.CommentMap).Filter":    Getter,
	"(go/ast.CommentMap).String":    Getter,
	"(go/ast.ObjKind).String":       Getter,
	"go/ast.IsExported":             Pure,
	"go/ast.MergePackageFiles":      Getter,
	"go/ast.NewCommentMap":          Getter,
	"go/ast.NewIdent":               Getter,
	"go/ast.NewObj":                 Getter,
	"go/ast.NewPackage":             Getter,
	"go/ast.NewScope":               Getter,
	"go/ast.NotNilFilter":           Pure,

	"(*go/build.Context).Import":          Getter,
	"(*go/build.Context).ImportDir":       Getter,
	"(*go/build.Context).MatchFile":       Getter,
	"(*go/build.Context).SrcDirs":         Getter,
	"(*go/build.MultiPackageError).Error": Getter,
	"(*go/build.NoGoError).Error":         Getter,
	"(*go/build.Package).IsCommand":       Getter,
	"go/build.ArchChar":                   Pure,
	"go/build.Import":                     Getter,
	"go/build.ImportDir":                  Getter,
	"go/build.IsLocalImport":              Pure,

	"go/doc.Examples":      Getter,
	"go/doc.IsPredeclared": Pure,
	"go/doc.New":           Getter,
	"go/doc.Synopsis":      Pure,

	"go/importer.Default":     Pure,
	"go/importer.For":         Getter,
	"go/importer.ForCompiler": Getter,

	"(go/scanner.Error).Error":     Pure,
	"(go/scanner.ErrorList).Err":   Getter,
	"(go/scanner.ErrorList).Error": Getter,
	"(go/scanner.ErrorList).Len":   Getter,

	"(*go/token.File).Base":           Getter,
	"(*go/token.File).Line":           Getter,
	"(*go/token.File).LineCount":      Getter,
	"(*go/token.File).LineStart":      Getter,
	"(*go/token.File).Name":           Getter,
	"(*go/token.File).Offset":         Getter,
	"(*go/token.File).Pos":            Getter,
	"(*go/token.File).Position":       Getter,
	"(*go/token.File).PositionFor":    Getter,
	"(*go/token.File).Size":           Getter,
	"(*go/token.FileSet).Base":        Getter,
	"(*go/token.FileSet).File":        Getter,
	"(*go/token.FileSet).Position":    Getter,
	"(*go/token.FileSet).PositionFor": Getter,
	"(*go/token.Position).IsValid":    Getter,
	"(go/token.Pos).IsValid":          Pure,
	"(go/token.Position).String":      Pure,
	"(go/token.Token).IsKeyword":      Pure,
	"(go/token.Token).IsLiteral":      Pure,
	"(go/token.Token).IsOperator":     Pure,
	"(go/token.Token).Precedence":     Pure,
	"(go/token.Token).String":         Pure,
	"go/token.IsExported":             Pure,
	"go/token.IsIdentifier":           Pure,
	"go/token.IsKeyword":              Pure,
	"go/token.Lookup":                 Pure,
	"go/token.NewFileSet":             Getter,

	"go/constant.BinaryOp":        Getter,
	"go/constant.BitLen":          Getter,
	"go/constant.BoolVal":         Getter,
	"go/constant.Bytes":           Getter,
	"go/constant.Compare":         Getter,
	"go/constant.Denom":           Getter,
	"go/constant.Float32Val":      Getter,
	"go/constant.Float64Val":      Getter,
	"go/constant.Imag":            Getter,
	"go/constant.Int64Val":        Getter,
	"go/constant.Make":            Getter,
	"go/constant.MakeBool":        Getter,
	"go/constant.MakeFloat64":     Getter,
	"go/constant.MakeFromBytes":   Getter,
	"go/constant.MakeFromLiteral": Getter,
	"go/constant.MakeImag":        Getter,
	"go/constant.MakeInt64":       Getter,
	"go/constant.MakeString":      Getter,
	"go/constant.MakeUint64":      Getter,
	"go/constant.MakeUnknown":     Getter,
	"go/constant.Num":             Getter,
	"go/constant.Real":            Getter,
	"go/constant.Shift":           Getter,
	"go/constant.Sign":            Getter,
	"go/constant.StringVal":       Getter,
	"go/constant.ToComplex":       Getter,
	"go/constant.ToInt":           Getter,
	"go/constant.Uint64Val":       Getter,
	"go/constant.UnaryOp":         Getter,
	"go/constant.Val":             Getter,

	"(*go/types.Array).Elem":                   Getter,
	"(*go/types.Array).Len":                    Getter,
	"(*go/types.Array).String":                 Getter,
	"(*go/types.Array).Underlying":             Getter,
	"(*go/types.Basic).Info":                   Getter,
	"(*go/types.Basic).Kind":                   Getter,
	"(*go/types.Basic).Name":                   Getter,
	"(*go/types.Basic).String":                 Getter,
	"(*go/types.Basic).Underlying":             Getter,
	"(*go/types.Builtin).Exported":             Getter,
	"(*go/types.Builtin).Id":                   Getter,
	"(*go/types.Builtin).Name":                 Getter,
	"(*go/types.Builtin).Parent":               Getter,
	"(*go/types.Builtin).Pkg":                  Getter,
	"(*go/types.Builtin).Pos":                  Getter,
	"(*go/types.Builtin).String":               Getter,
	"(*go/types.Builtin).Type":                 Getter,
	"(*go/types.Chan).Dir":                     Getter,
	"(*go/types.Chan).Elem":                    Getter,
	"(*go/types.Chan).String":                  Getter,
	"(*go/types.Chan).Underlying":              Getter,
	"(*go/types.Const).Exported":               Getter,
	"(*go/types.Const).Id":                     Getter,
	"(*go/types.Const).Name":                   Getter,
	"(*go/types.Const).Parent":                 Getter,
	"(*go/types.Const).Pkg":                    Getter,
	"(*go/types.Const).Pos":                    Getter,
	"(*go/types.Const).String":                 Getter,
	"(*go/types.Const).Type":                   Getter,
	"(*go/types.Const).Val":                    Getter,
	"(*go/types.Func).Exported":                Getter,
	"(*go/types.Func).FullName":                Getter,
	"(*go/types.Func).Id":                      Getter,
	"(*go/types.Func).Name":                    Getter,
	"(*go/types.Func).Parent":                  Getter,
	"(*go/types.Func).Pkg":                     Getter,
	"(*go/types.Func).Pos":                     Getter,
	"(*go/types.Func).Scope":                   Getter,
	"(*go/types.Func).String":                  Getter,
	"(*go/types.Func).Type":                    Getter,
	"(*go/types.Info).ObjectOf":                Getter,
	"(*go/types.Info).TypeOf":                  Getter,
	"(*go/types.Initializer).String":           Getter,
	"(*go/types.Interface).Complete":           Getter,
	"(*go/types.Interface).Embedded":           Getter,
	"(*go/types.Interface).EmbeddedType":       Getter,
	"(*go/types.Interface).Empty":              Getter,
	"(*go/types.Interface).ExplicitMethod":     Getter,
	"(*go/types.Interface).Method":             Getter,
	"(*go/types.Interface).NumEmbeddeds":       Getter,
	"(*go/types.Interface).NumExplicitMethods": Getter,
	"(*go/types.Interface).NumMethods":         Getter,
	"(*go/types.Interface).String":             Getter,
	"(*go/types.Interface).Underlying":         Getter,
	"(*go/types.Label).Exported":               Getter,
	"(*go/types.Label).Id":                     Getter,
	"(*go/types.Label).Name":                   Getter,
	"(*go/types.Label).Parent":                 Getter,
	"(*go/types.Label).Pkg":                    Getter,
	"(*go/types.Label).Pos":                    Getter,
	"(*go/types.Label).String":                 Getter,
	"(*go/types.Label).Type":                   Getter,
	"(*go/types.Map).Elem":                     Getter,
	"(*go/types.Map).Key":                      Getter,
	"(*go/types.Map).String":                   Getter,
	"(*go/types.Map).Underlying":               Getter,
	"(*go/types.MethodSet).At":                 Getter,
	"(*go/types.MethodSet).Len":                Getter,
	"(*go/types.MethodSet).Lookup":             Getter,
	"(*go/types.MethodSet).String":             Getter,
	"(*go/types.Named).Method":                 Getter,
	"(*go/types.Named).NumMethods":             Getter,
	"(*go/types.Named).Obj":                    Getter,
	"(*go/types.Named).String":                 Getter,
	"(*go/types.Named).Underlying":             Getter,
	"(*go/types.Nil).Exported":                 Getter,
	"(*go/types.Nil).Id":                       Getter,
	"(*go/types.Nil).Name":                     Getter,
	"(*go/types.Nil).Parent":                   Getter,
	"(*go/types.Nil).Pkg":                      Getter,
	"(*go/types.Nil).Pos":                      Getter,
	"(*go/types.Nil).String":                   Getter,
	"(*go/types.Nil).Type":                     Getter,
	"(*go/types.Package).Complete":             Getter,
	"(*go/types.Package).Imports":              Getter,
	"(*go/types.Package).MarkComplete":         Getter,
	"(*go/types.Package).Name":                 Getter,
	"(*go/types.Package).Path":                 Getter,
	"(*go/types.Package).Scope":                Getter,
	"(*go/types.Package).String":               Getter,
	"(*go/types.PkgName).Exported":             Getter,
	"(*go/types.PkgName).Id":                   Getter,
	"(*go/types.PkgName).Imported":             Getter,
	"(*go/types.PkgName).Name":                 Getter,
	"(*go/types.PkgName).Parent":               Getter,
	"(*go/types.PkgName).Pkg":                  Getter,
	"(*go/types.PkgName).Pos":                  Getter,
	"(*go/types.PkgName).String":               Getter,
	"(*go/types.PkgName).Type":                 Getter,
	"(*go/types.Pointer).Elem":                 Getter,
	"(*go/types.Pointer).String":               Getter,
	"(*go/types.Pointer).Underlying":           Getter,
	"(*go/types.Scope).Child":                  Getter,
	"(*go/types.Scope).Contains":               Getter,
	"(*go/types.Scope).End":                    Getter,
	"(*go/types.Scope).Innermost":              Getter,
	"(*go/types.Scope).Len":                    Getter,
	"(*go/types.Scope).Lookup":                 Getter,
	"(*go/types.Scope).LookupParent":           Getter,
	"(*go/types.Scope).Names":                  Getter,
	"(*go/types.Scope).NumChildren":            Getter,
	"(*go/types.Scope).Parent":                 Getter,
	"(*go/types.Scope).Pos":                    Getter,
	"(*go/types.Scope).String":                 Getter,
	"(*go/types.Selection).Index":              Getter,
	"(*go/types.Selection).Indirect":           Getter,
	"(*go/types.Selection).Kind":               Getter,
	"(*go/types.Selection).Obj":                Getter,
	"(*go/types.Selection).Recv":               Getter,
	"(*go/types.Selection).String":             Getter,
	"(*go/types.Selection).Type":               Getter,
	"(*go/types.Signature).Params":             Getter,
	"(*go/types.Signature).Recv":               Getter,
	"(*go/types.Signature).Results":            Getter,
	"(*go/types.Signature).String":             Getter,
	"(*go/types.Signature).Underlying":         Getter,
	"(*go/types.Signature).Variadic":           Getter,
	"(*go/types.Slice).Elem":                   Getter,
	"(*go/types.Slice).String":                 Getter,
	"(*go/types.Slice).Underlying":             Getter,
	"(*go/types.StdSizes).Alignof":             Getter,
	"(*go/types.StdSizes).Offsetsof":           Getter,
	"(*go/types.StdSizes).Sizeof":              Getter,
	"(*go/types.Struct).Field":                 Getter,
	"(*go/types.Struct).NumFields":             Getter,
	"(*go/types.Struct).String":                Getter,
	"(*go/types.Struct).Tag":                   Getter,
	"(*go/types.Struct).Underlying":            Getter,
	"(*go/types.Tuple).At":                     Getter,
	"(*go/types.Tuple).Len":                    Getter,
	"(*go/types.Tuple).String":                 Getter,
	"(*go/types.Tuple).Underlying":             Getter,
	"(*go/types.TypeName).Exported":            Getter,
	"(*go/types.TypeName).Id":                  Getter,
	"(*go/types.TypeName).IsAlias":             Getter,
	"(*go/types.TypeName).Name":                Getter,
	"(*go/types.TypeName).Parent":              Getter,
	"(*go/types.TypeName).Pkg":                 Getter,
	"(*go/types.TypeName).Pos":                 Getter,
	"(*go/types.TypeName).String":              Getter,
	"(*go/types.TypeName).Type":                Getter,
	"(*go/types.Var).Anonymous":                Getter,
	"(*go/types.Var).Embedded":                 Getter,
	"(*go/types.Var).Exported":                 Getter,
	"(*go/types.Var).Id":                       Getter,
	"(*go/types.Var).IsField":                  Getter,
	"(*go/types.Var).Name":                     Getter,
	"(*go/types.Var).Parent":                   Getter,
	"(*go/types.Var).Pkg":                      Getter,
	"(*go/types.Var).Pos":                      Getter,
	"(*go/types.Var).String":                   Getter,
	"(*go/types.Var).Type":                     Getter,
	"(go/types.Error).Error":                   Getter,
	"(go/types.TypeAndValue).Addressable":      Getter,
	"(go/types.TypeAndValue).Assignable":       Getter,
	"(go/types.TypeAndValue).HasOk":            Getter,
	"(go/types.TypeAndValue).IsBuiltin":        Getter,
	"(go/types.TypeAndValue).IsNil":            Getter,
	"(go/types.TypeAndValue).IsType":           Getter,
	"(go/types.TypeAndValue).IsValue":          Getter,
	"(go/types.TypeAndValue).IsVoid":           Getter,
	"go/types.AssertableTo":                    Getter,
	"go/types.AssignableTo":                    Getter,
	"go/types.Comparable":                      Getter,
	"go/types.ConvertibleTo":                   Getter,
	"go/types.Default":                         Getter,
	"go/types.Eval":                            Getter,
	"go/types.ExprString":                      Getter,
	"go/types.Id":                              Getter,
	"go/types.Identical":                       Getter,
	"go/types.IdenticalIgnoreTags":             Getter,
	"go/types.Implements":                      Getter,
	"go/types.IsInterface":                     Getter,
	"go/types.LookupFieldOrMethod":             Getter,
	"go/types.MissingMethod":                   Getter,
	"go/types.NewArray":                        Getter,
	"go/types.NewChan":                         Getter,
	"go/types.NewChecker":                      Getter,
	"go/types.NewConst":                        Getter,
	"go/types.NewField":                        Getter,
	"go/types.NewFunc":                         Getter,
	"go/types.NewInterface":                    Getter,
	"go/types.NewInterfaceType":                Getter,
	"go/types.NewLabel":                        Getter,
	"go/types.NewMap":                          Getter,
	"go/types.NewMethodSet":                    Getter,
	"go/types.NewNamed":                        Getter,
	"go/types.NewPackage":                      Getter,
	"go/types.NewParam":                        Getter,
	"go/types.NewPkgName":                      Getter,
	"go/types.NewPointer":                      Getter,
	"go/types.NewScope":                        Getter,
	"go/types.NewSignature":                    Getter,
	"go/types.NewSlice":                        Getter,
	"go/types.NewStruct":                       Getter,
	"go/types.NewTuple":                        Getter,
	"go/types.NewTypeName":                     Getter,
	"go/types.NewVar":                          Getter,
	"go/types.ObjectString":                    Getter,
	"go/types.RelativeTo":                      Getter,
	"go/types.SelectionString":                 Getter,
	"go/types.SizesFor":                        Getter,
	"go/types.TypeString":                      Getter,

	"(*runtime.Func).Entry":                    Getter,
	"(*runtime.Func).FileLine":                 Getter,
	"(*runtime.Func).Name":                     Getter,
	"(*runtime.MemProfileRecord).InUseBytes":   Getter,
	"(*runtime.MemProfileRecord).InUseObjects": Getter,
	"(*runtime.MemProfileRecord).Stack":        Getter,
	"(*runtime.StackRecord).Stack":             Getter,
	"(*runtime.TypeAssertionError).Error":      Getter,
	"runtime.Caller":                           Getter,
	"runtime.Callers":                          Getter,
	"runtime.CallersFrames":                    Getter,
	"runtime.FuncForPC":                        Getter,
	"runtime.GOROOT":                           Getter,
	"runtime.NumCPU":                           Getter,
	"runtime.NumCgoCall":                       Getter,
	"runtime.NumGoroutine":                     Getter,
	"runtime.Version":                          Pure,

	"runtime/debug.Stack":         Getter,
	"runtime/debug.ReadBuildInfo": Getter,

	"runtime/pprof.Label":            Getter,
	"runtime/pprof.WithLabels":       Getter,
	"runtime/pprof.Labels":           Getter,
	"runtime/pprof.Lookup":           Getter,
	"runtime/pprof.Profiles":         Getter,
	"(*runtime/pprof.Profile).Count": Getter,
	"(*runtime/pprof.Profile).Name":  Getter,

	"runtime/trace.IsEnabled": Getter,

	"crypto/aes.NewCipher":            Getter,
	"(crypto/aes.KeySizeError).Error": Pure,

	"crypto/cipher.NewGCM":              Getter,
	"crypto/cipher.NewGCMWithNonceSize": Getter,
	"crypto/cipher.NewGCMWithTagSize":   Getter,
	"crypto/cipher.NewCBCDecrypter":     Getter,
	"crypto/cipher.NewCBCEncrypter":     Getter,
	"crypto/cipher.NewCFBDecrypter":     Getter,
	"crypto/cipher.NewCFBEncrypter":     Getter,
	"crypto/cipher.NewCTR":              Getter,
	"crypto/cipher.NewOFB":              Getter,

	"crypto/des.NewCipher":            Getter,
	"crypto/des.NewTripleDESCipher":   Getter,
	"(crypto/des.KeySizeError).Error": Pure,

	"crypto/dsa.Verify": Getter,

	"crypto/ecdsa.Verify":               Getter,
	"crypto/ecdsa.VerifyASN1":           Getter,
	"(*crypto/ecdsa.PrivateKey).Equal":  Getter,
	"(*crypto/ecdsa.PrivateKey).Public": Getter,
	"(*crypto/ecdsa.PublicKey).Equal":   Getter,

	"crypto/ed25519.Sign":                Getter,
	"crypto/ed25519.Verify":              Getter,
	"crypto/ed25519.NewKeyFromSeed":      Getter,
	"(crypto/ed25519.PrivateKey).Equal":  Getter,
	"(crypto/ed25519.PrivateKey).Public": Getter,
	"(crypto/ed25519.PrivateKey).Seed":   Getter,
	"(crypto/ed25519.PublicKey).Equal":   Getter,

	"crypto/elliptic.Marshal":                       Getter,
	"crypto/elliptic.MarshalCompressed":             Getter,
	"crypto/elliptic.Unmarshal":                     Getter,
	"crypto/elliptic.UnmarshalCompressed":           Getter,
	"crypto/elliptic.P224":                          Getter,
	"crypto/elliptic.P256":                          Getter,
	"crypto/elliptic.P384":                          Getter,
	"crypto/elliptic.P521":                          Getter,
	"(*crypto/elliptic.CurveParams).Add":            Getter,
	"(*crypto/elliptic.CurveParams).Double":         Getter,
	"(*crypto/elliptic.CurveParams).IsOnCurve":      Getter,
	"(*crypto/elliptic.CurveParams).Params":         Getter,
	"(*crypto/elliptic.CurveParams).ScalarBaseMult": Getter,
	"(*crypto/elliptic.CurveParams).ScalarMult":     Getter,

	"crypto/hmac.Equal": SlicePure,
	"crypto/hmac.New":   Getter,

	"crypto/md5.New": Getter,
	"crypto/md5.Sum": SlicePure,

	"crypto/rc4.NewCipher":            Getter,
	"(crypto/rc4.KeySizeError).Error": Pure,

	"crypto/rsa.VerifyPKCS1v15":         Getter,
	"crypto/rsa.VerifyPSS":              Getter,
	"(*crypto/rsa.PSSOptions).HashFunc": Getter,
	"(*crypto/rsa.PrivateKey).Equal":    Getter,
	"(*crypto/rsa.PrivateKey).Public":   Getter,
	"(*crypto/rsa.PrivateKey).Validate": Getter,
	"(*crypto/rsa.PublicKey).Equal":     Getter,
	"(*crypto/rsa.PublicKey).Size":      Getter,

	"crypto/sha1.New": Getter,
	"crypto/sha1.Sum": SlicePure,

	"crypto/sha256.New":    Getter,
	"crypto/sha256.New224": Getter,
	"crypto/sha256.Sum224": SlicePure,
	"crypto/sha256.Sum256": SlicePure,

	"crypto/sha512.New":        Getter,
	"crypto/sha512.New384":     Getter,
	"crypto/sha512.New512_224": Getter,
	"crypto/sha512.New512_256": Getter,
	"crypto/sha512.Sum384":     SlicePure,
	"crypto/sha512.Sum512":     SlicePure,
	"crypto/sha512.Sum512_224": SlicePure,
	"crypto/sha512.Sum512_256": SlicePure,

	// we don't want to suggest removing or replacing code that
	// involves crypto/subtle. Explicitly mark them as not pure, to
	// prevent automatic detection.
	"crypto/subtle.ConstantTimeByteEq":   0,
	"crypto/subtle.ConstantTimeCompare":  0,
	"crypto/subtle.ConstantTimeCopy":     0,
	"crypto/subtle.ConstantTimeEq":       0,
	"crypto/subtle.ConstantTimeLessOrEq": 0,
	"crypto/subtle.ConstantTimeSelect":   0,

	"(*crypto/tls.CertificateRequestInfo).SupportsCertificate": Getter,
	"(*crypto/tls.ClientHelloInfo).SupportsCertificate":        Getter,
	"(*crypto/tls.Config).Clone":                               Getter,
	"(*crypto/tls.Conn).ConnectionState":                       Getter,
	"(*crypto/tls.Conn).LocalAddr":                             Getter,
	"(*crypto/tls.Conn).OCSPResponse":                          Getter,
	"(*crypto/tls.Conn).RemoteAddr":                            Getter,
	"(*crypto/tls.Conn).VerifyHostname":                        Getter,
	"(*crypto/tls.ConnectionState).ExportKeyingMaterial":       Getter,
	"crypto/tls.CipherSuiteName":                               Pure,
	"crypto/tls.CipherSuites":                                  Getter,
	"crypto/tls.ClientAuthType.String":                         Pure,
	"crypto/tls.CurveID.String":                                Pure,
	"crypto/tls.InsecureCipherSuites":                          Getter,
	"crypto/tls.LoadX509KeyPair":                               Getter,
	"crypto/tls.NewLRUClientSessionCache":                      Getter,
	"crypto/tls.RecordHeaderError.Error":                       Getter,
	"crypto/tls.SignatureScheme.String":                        Pure,
	"crypto/tls.X509KeyPair":                                   Getter,

	"(*crypto/x509.CertPool).Subjects":                 Getter,
	"(*crypto/x509.Certificate).CheckCRLSignature":     Getter,
	"(*crypto/x509.Certificate).CheckSignature":        Getter,
	"(*crypto/x509.Certificate).CheckSignatureFrom":    Getter,
	"(*crypto/x509.Certificate).Equal":                 Getter,
	"(*crypto/x509.Certificate).Verify":                Getter,
	"(*crypto/x509.Certificate).VerifyHostname":        Getter,
	"(*crypto/x509.CertificateRequest).CheckSignature": Getter,
	"(crypto/x509.CertificateInvalidError).Error":      Getter,
	"(crypto/x509.ConstraintViolationError).Error":     Pure,
	"(crypto/x509.HostnameError).Error":                Getter,
	"(crypto/x509.InsecureAlgorithmError).Error":       Pure,
	"(crypto/x509.PublicKeyAlgorithm).String":          Pure,
	"(crypto/x509.SignatureAlgorithm).String":          Pure,
	"(crypto/x509.SystemRootsError).Error":             Getter,
	"(crypto/x509.UnhandledCriticalExtension).Error":   Pure,
	"(crypto/x509.UnknownAuthorityError).Error":        Getter,
	"crypto/x509.DecryptPEMBlock":                      Getter,
	"crypto/x509.IsEncryptedPEMBlock":                  Getter,
	"crypto/x509.MarshalECPrivateKey":                  Getter,
	"crypto/x509.MarshalPKCS1PrivateKey":               Getter,
	"crypto/x509.MarshalPKCS1PublicKey":                Getter,
	"crypto/x509.MarshalPKCS8PrivateKey":               Getter,
	"crypto/x509.MarshalPKIXPublicKey":                 Getter,
	"crypto/x509.NewCertPool":                          Getter,
	"crypto/x509.ParseCRL":                             Getter,
	"crypto/x509.ParseCertificate":                     Getter,
	"crypto/x509.ParseCertificateRequest":              Getter,
	"crypto/x509.ParseCertificates":                    Getter,
	"crypto/x509.ParseDERCRL":                          Getter,
	"crypto/x509.ParseECPrivateKey":                    Getter,
	"crypto/x509.ParsePKCS1PrivateKey":                 Getter,
	"crypto/x509.ParsePKCS1PublicKey":                  Getter,
	"crypto/x509.ParsePKCS8PrivateKey":                 Getter,
	"crypto/x509.ParsePKIXPublicKey":                   Getter,
	"crypto/x509.SystemCertPool":                       Getter,

	"(*crypto/x509/pkix.CertificateList).HasExpired": Getter,
	"(crypto/x509/pkix.Name).String":                 Getter,
	"(crypto/x509/pkix.Name).ToRDNSequence":          Getter,
	"(crypto/x509/pkix.RDNSequence).String":          Getter,

	"(*math/big.Float).Acc":            Getter,
	"(*math/big.Float).Cmp":            Getter,
	"(*math/big.Float).Float32":        Getter,
	"(*math/big.Float).Float64":        Getter,
	"(*math/big.Float).GobEncode":      Getter,
	"(*math/big.Float).Int64":          Getter,
	"(*math/big.Float).IsInf":          Getter,
	"(*math/big.Float).IsInt":          Getter,
	"(*math/big.Float).MarshalText":    Getter,
	"(*math/big.Float).MinPrec":        Getter,
	"(*math/big.Float).Mode":           Getter,
	"(*math/big.Float).Prec":           Getter,
	"(*math/big.Float).Sign":           Getter,
	"(*math/big.Float).Signbit":        Getter,
	"(*math/big.Float).String":         Getter,
	"(*math/big.Float).Text":           Getter,
	"(*math/big.Float).Uint64":         Getter,
	"(*math/big.Int).Bit":              Getter,
	"(*math/big.Int).BitLen":           Getter,
	"(*math/big.Int).Bits":             Getter,
	"(*math/big.Int).Bytes":            Getter,
	"(*math/big.Int).Cmp":              Getter,
	"(*math/big.Int).CmpAbs":           Getter,
	"(*math/big.Int).GobEncode":        Getter,
	"(*math/big.Int).Int64":            Getter,
	"(*math/big.Int).IsInt64":          Getter,
	"(*math/big.Int).IsUint64":         Getter,
	"(*math/big.Int).MarshalJSON":      Getter,
	"(*math/big.Int).MarshalText":      Getter,
	"(*math/big.Int).ProbablyPrime":    Getter,
	"(*math/big.Int).Sign":             Getter,
	"(*math/big.Int).String":           Getter,
	"(*math/big.Int).Text":             Getter,
	"(*math/big.Int).TrailingZeroBits": Getter,
	"(*math/big.Int).Uint64":           Getter,
	"(*math/big.Rat).Cmp":              Getter,
	"(*math/big.Rat).Denom":            Getter,
	"(*math/big.Rat).Float32":          Getter,
	"(*math/big.Rat).Float64":          Getter,
	"(*math/big.Rat).FloatString":      Getter,
	"(*math/big.Rat).GobEncode":        Getter,
	"(*math/big.Rat).IsInt":            Getter,
	"(*math/big.Rat).MarshalText":      Getter,
	"(*math/big.Rat).Num":              Getter,
	"(*math/big.Rat).RatString":        Getter,
	"(*math/big.Rat).Sign":             Getter,
	"(*math/big.Rat).String":           Getter,
	"math/big.Jacobi":                  Getter,
	"math/big.NewFloat":                Getter,
	"math/big.NewInt":                  Getter,
	"math/big.NewRat":                  Getter,
	"math/big.ParseFloat":              Getter,
	"(math/big.RoundingMode).String":   Pure,
	"(math/big.Accuracy).String":       Pure,
	"(math/big.ErrNaN).Error":          Pure,

	"net/http/cgi.Request":        Getter,
	"net/http/cgi.RequestFromMap": Getter,

	"net/http/cookiejar.New":           Getter,
	"(net/http/cookiejar.Jar).Cookies": Getter,

	"net/http/fcgi.ProcessEnv": Getter,

	"net/http/httptest.NewRequest":           Getter,
	"net/http/httptest.NewRecorder":          Getter,
	"net/http/httptest.NewUnstartedServer":   Getter,
	"(*net/http/httptest.Server.Certificate": Getter,
	"(*net/http/httptest.Server.Client":      Getter,

	"net/http/httptrace.WithCLientTrace":    Getter,
	"net/http/httptrace.ContextClientTrace": Getter,

	"(*net/http/httputil.ClientConn).Pending":     Getter,
	"(*net/http/httputil.ServerConn).Pending":     Getter,
	"net/http/httputil.NewChunkedReader":          Getter,
	"net/http/httputil.NewChunkedWriter":          Getter,
	"net/http/httputil.NewClientConn":             Getter,
	"net/http/httputil.NewProxyClientConn":        Getter,
	"net/http/httputil.NewServerConn":             Getter,
	"net/http/httputil.NewSingleHostReverseProxy": Getter,

	"(*reflect.MapIter).Key":          Getter,
	"(*reflect.MapIter).Value":        Getter,
	"(*reflect.ValueError).Error":     Getter,
	"(reflect.ChanDir).String":        Pure,
	"(reflect.Kind).String":           Pure,
	"(reflect.StructTag).Get":         Getter,
	"(reflect.StructTag).Lookup":      Getter,
	"(reflect.Value).Addr":            Getter,
	"(reflect.Value).Bool":            Getter,
	"(reflect.Value).Bytes":           Getter,
	"(reflect.Value).CanAddr":         Getter,
	"(reflect.Value).CanInterface":    Getter,
	"(reflect.Value).CanSet":          Getter,
	"(reflect.Value).Cap":             Getter,
	"(reflect.Value).Complex":         Getter,
	"(reflect.Value).Convert":         Getter,
	"(reflect.Value).Elem":            Getter,
	"(reflect.Value).Field":           Getter,
	"(reflect.Value).FieldByIndex":    Getter,
	"(reflect.Value).FieldByName":     Getter,
	"(reflect.Value).FieldByNameFunc": Getter,
	"(reflect.Value).Float":           Getter,
	"(reflect.Value).Index":           Getter,
	"(reflect.Value).Int":             Getter,
	"(reflect.Value).Interface":       Getter,
	"(reflect.Value).InterfaceData":   Getter,
	"(reflect.Value).IsNil":           Getter,
	"(reflect.Value).IsValid":         Getter,
	"(reflect.Value).IsZero":          Getter,
	"(reflect.Value).Kind":            Getter,
	"(reflect.Value).Len":             Getter,
	"(reflect.Value).MapIndex":        Getter,
	"(reflect.Value).MapKeys":         Getter,
	"(reflect.Value).MapRange":        Getter,
	"(reflect.Value).Method":          Getter,
	"(reflect.Value).MethodByName":    Getter,
	"(reflect.Value).NumField":        Getter,
	"(reflect.Value).NumMethod":       Getter,
	"(reflect.Value).OverflowComplex": Getter,
	"(reflect.Value).OverflowFloat":   Getter,
	"(reflect.Value).OverflowInt":     Getter,
	"(reflect.Value).OverflowUint":    Getter,
	"(reflect.Value).Pointer":         Getter,
	"(reflect.Value).Slice":           Getter,
	"(reflect.Value).Slice3":          Getter,
	"(reflect.Value).String":          Getter,
	"(reflect.Value).Type":            Getter,
	"(reflect.Value).Uint":            Getter,
	"(reflect.Value).UnsafeAddr":      Getter,
	"reflect.ArrayOf":                 Getter,
	"reflect.ChanOf":                  Getter,
	"reflect.DeepEqual":               Getter,
	"reflect.FuncOf":                  Getter,
	"reflect.Indirect":                Getter,
	"reflect.MakeChan":                Getter,
	"reflect.MakeFunc":                Getter,
	"reflect.MakeMap":                 Getter,
	"reflect.MakeMapWithSize":         Getter,
	"reflect.MakeSlice":               Getter,
	"reflect.MapOf":                   Getter,
	"reflect.New":                     Getter,
	"reflect.PtrTo":                   Getter,
	"reflect.SliceOf":                 Getter,
	"reflect.StructOf":                Getter,
	"reflect.Swapper":                 Getter,
	"reflect.TypeOf":                  Getter,
	"reflect.ValueOf":                 Getter,
	"reflect.Zero":                    Getter,

	// We don't cover syscall and syscall/js because we don't hate ourselves.
}
